#!/bin/bash

############################### Informações #########################################
# Autor: Anônimo000                                                                 #
# Data: 05/02/2016                                                                  #
# Descrição: Para inúmeras finalidades descritas no site                            #
# Versão: 3.4                                                                       #
# Data de modificação: 06/12/2016                                                   #
# OS: Apenas para derivados do Debian.                                              #
#                                                                                   #
# Reporte os erros que encontrar para o email abaixo                                #
# Não retire os devidos créditos                                                    #
# Site: knifesystem.com.br                                                           #
# Página no face: https://facebook.com/knifesystem                                  #
# Comunidade: https://plus.google.com/communities/107206313729931554307             #
# Parceiros: http://www.goscripts.net - GoScripts                                   #
#            https://brasilblackhat.com.br - Brasil Black Hat                       #
#####################################################################################


###### versão 1.0 #########################
#                                         #
# Criação do menu, das funcões.           #
#                                         #
# Instalação dos programas.               #
#                                         #
# Automatização nas tarefas.              #
###########################################
#
####### versão 1.1 ########################
# Nova opção, instalação de temas.        #
#                                         #
###########################################
# Erro de esquema das cores concertado.   #
#
####### versão 1.2 ########################
# Nova opção, atualização da distribuição.#
###########################################
#
####### versão 1.3 ########################
# Nova opção, remover temas               #
###########################################
#
###### versão 1.4 #########################
# Remoção da lista de programas de insta- #
# lação e movido para um sub-menu.        #
#                                         #
# Nova opção, Lista de programas          #
#                                         #
# Efeitos no menu príncipal               #
###############/############################
#
###### versão 1.5 #########################
# Nova opção, Firewall                    #
#                                         #
# Erro na instalação do Gnumeric          #
#                                         #
###########################################
#
##### versão 1.6 ##########################
# Firewall permanente adicionado          #
#                                         #
# Nova opção, GIT                         #
#                                         #
# Aperfeiçoado algumas funções            #
#                                         #
# Script mais discreto sem mostrar muitas mensagens
#                                         #
# Mensagens de log são geradas            #
###########################################
#
###### versão 1.7 #########################
# Aperfeçoamentos nas funções             #
###########################################
#
###### versão 1.8 #########################
# Barra de progresso implantada           #
#                                         #
# Pequenos bugs corrigidos                #
###########################################
#
####### versão 1.9 ########################
# Nova opção, Informações do PC           #
#                                         #
# Pode-se agora mostar o IP externo       #
###########################################
#
####### versão 2.0  #######################
# Melhorado a verificação de conexão      #
#                                         #
# Nmap adicionadoas opções de infos       #
#                                         #
# Concertado bug de obtenção de endereço IP
###########################################
#
####### versão 2.1 ########################
# Nova opção Baixar arquivos              #
###########################################
#
###### versão 2.2 #########################
# Melhorado funções                       #
# Pequenos erros corrigidos               #
# Nova cor implantada                     #
# Novo visual do menu                     #
# Opções de instalação de programas removidas
# Refeito toda opção de programas         #
# Retirado a opção GIT                    #
# Melhorada a opção de instalar programas #
# Informa se há downloads a serem continuados
###########################################
#
###### versão 2.3 #########################
# Opção de adicionar conky em temas adicionadoas
# Melhorado a dunçã de instalar o cursor
# Função de criar firewall adicionadoas
# Firewall melhorado
##########################################
#
###### versão 2.4 ########################
# TeamViewer adicionado a opção de instalar programas
# Firewall melhorado consideravelmente
#########################################
#
###### versão 2.5 ##########################
# Opção de scner de portas em host remoto implantada
# Opção extra de instalar interface gráfica no Arch adicionada
#############################################
#
###### versão 2.6 ###########################
# Interface graica implantada em algumas funções
# para selecionar arquivos
# Algumas informações extras adicionadoas
# ao obter informações do PC
#############################################
#
###### versão 2.7 ###########################
#Categorias de programas na aba procurar adicionadas
#Download e instalação do PyCharm Pro e Comu
#Opção de aparência adicionada
#Instalação de temas remotos adicionado
#Instalação de ícones remotos adicionada
#Instalação extra do PhotoGimp adicionada
############################################
#
###### versão 2.8 #############################
# Adicionado opção de rastrear IP
# Novo item adicionado ao baixar e instalar
# google-earth
###########################################
#
###### versão 2.9 ############################
#Opção de criptografar arquivos adicionada
#############################################
#
###### versão 3.0 ###############################
# Gerar senhas
# Opção firewall substítuida por segurança
# semântica dos links de download Melhorada
# variáveis armazenam os links
# bloquear sites impplnatado no firewall
################################################
#
###### versão 3.1 #############################
# Adicionado limpeza completa do sistema
# Removido pacmans desnecessários
# Git para iniciantes Adicionado
# Novo parceiro Brasil Black Hat adicionado
# Mais opções de prgramas em achar
# Novas opções de temas para instalação adicionadas
################################################
#
###### versão 3.2 #############################
# Opção de verificar previsão do tempo adicionada
# Mais informações adicionadas em obter informações
# Menu mudado
# Verificar ditro completamete com Lynis
################################################
#
###### versão 3.3 #############################
# Verificação de pacotes instalados removidas
# Corrigindo informações do cabeçalho
################################################
#
###### versão 3.4 ##############################
# Bugs com instalação de temas resolvidos
# grande parte dos temas onlines foram retirados
# Problema com o remover pacotes resolvidos
# Implementado opção de atualizar KS
# Problemas em limpeza do sistema corrigidos
#############################################
verm="\033[1;31m"
verde="\033[1;32m"
amarelo=`echo "\033[1;33m"`
azul=`echo "\033[1;34m"`
branco=`echo "\033[0;37m"`
NORMAL=`echo "\033[m"`
ciano=`echo "\033[01;36m"`


########################################################
#                menu principal                        #
########################################################
echo -e "${azul}Verificando sua conexão...${NORMAL}"
ping -c1 google.com > /dev/null
if [ $? == 0 ];then
myip=`curl -s https://wtfismyip.com/text`
echo -e "${verde}Conectado${NORMAL}"
sleep 1
echo ""
else
  myip=`echo -e "${verm}Não conectado${NORMAL}"`
  echo -e "${verm}Não conectado a internet${NORMAL}"
  sleep 1
  echo ""
fi
function menu {
clear
echo -e $verm "====================================== ${NORMAL}"
sleep 0.1
echo -e $amarelo "            Knife System             ${NORMAL}"
sleep 0.1
echo -e $verm" ====================================== ${NORMAL}"
echo -e "${branco} http://knifesystem.com.br    versão 3.4"
echo ""
sleep 0.1
echo -e "${amarelo} A)${ciano} Instalar programas${NORMAL}"
sleep 0.1
echo -e "${amarelo} B)${ciano} Remover programas${NORMAL}"
sleep 0.1
echo -e "${amarelo} C)${ciano} Procurar programas${NORMAL}"
sleep 0.1
echo -e "${amarelo} D)${ciano} Reparar e limpar${NORMAL}"
sleep 0.1
echo -e "${amarelo} E)${ciano} Usando o git de forma fácil${NORMAL}"
sleep 0.1
echo -e "${amarelo} F)${ciano} Lista de programas${NORMAL}"
sleep 0.1
echo -e "${amarelo} G)${ciano} Arquivos${NORMAL}"
sleep 0.1
echo -e "${amarelo} H)${ciano} Aparência${NORMAL}"
sleep 0.1
echo -e "${amarelo} I)${ciano} Segurança${NORMAL}"
sleep 0.1
echo -e "${amarelo} J)${ciano} Informações diversas${NORMAL}"
sleep 0.1
echo -e "${amarelo} K)${ciano} Baixar arquivos${NORMAL}"
sleep 0.1

echo ""
echo -e "${ciano}1)${amarelo} Atualizar script${NORMAL}"
echo -e "${ciano}0)${amarelo} Sair${NORMAL}"
echo -e $verm "Escolha uma das opções:"

read -n1 inst
}


########################################################
#               Funções do menu principal              #
########################################################

##### Instalar programas #####

function instal() {
  function deb() {
    echo -e "${ciano}Selecione o pacote .deb a ser instalado:${NORMAL}"
    echo -e "${ciano}Selecione múltiplos pacotes caso for necessário também${NORMAL}"
    echo -e "${ciano}Basta selecionar${NORMAL}"
    sleep 1
    debResp=`zenity --file-selection --multiple --separator=" " --file-filter=*.deb --title="Selecione o pacote .deb a ser instalado"`
    if [ -z $debResp ];then
      echo -e "${verm}Nenhum pacote .deb selecionado!${NORMAL}"
      sleep 1
      reset
      install
     else
      echo -e "${azul}Instalando pacote aguarde...${NORMAL}"
      sleep 1
      dpkg -i $debResp | pv -W > /dev/null
      apt-get install -f -y --force-yes  | pv -W /dev/null
      echo ""
      echo -e "${verde}Instalação concluída!${NORMAL}"
      sleep 1
    fi
  }

  function instRep() {
    echo -e "${ciano}Informe o nome  do pacote à ser instalado:${NORMAL}"
    read pacResp
    clear
    echo -e "${azul}Instalando pacote aguarde...${NORMAL}"
    apt-get -y --force-yes install $pacResp | pv -W > /dev/null
    echo ""
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  }
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Instalar               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   echo ""
   echo -e $amarelo"Como deseja instalar?${NORMAL}"
   echo ""
   echo -e "${ciano}1) ${azul}Pacote .deb${NORMAL}"
   echo -e "${ciano}2) ${azul}Direto do repositório${NORMAL}"
   echo ""
   echo -e "${verde}Pressione ${amarelo}[ Q ] ${verde}para voltar${NORMAL}"
   read -n1 instResp
   case $instResp in
     1)reset;
       deb;
       inst;
       ;;

       2)reset;
         instRep;
         inst;
         ;;

         Q | q)fazer;
         ;;
         *)reset;
           inst;
         esac
}

###### Remover programas #####

function remov() {
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Remover               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   echo ""
   echo -e $amarelo"Digite o nome do programa a ser removido:${NORMAL}"
   read rmove
   sleep 1
   echo -e "${azul}Removendo $rmove. Por favor, aguarde...${NORMAL}"
   apt-get -y --force-yes purge $rmove | pv -W > /var/log/KS_remove.log
   if [ $? != 0 ];then
     echo -e "${verm}Erro ao remover programa! Para mais informações consulte /var/log/KS_remove.log"
     sleep 2
     reset
     exit 1
   fi

   apt-get -y --force-yes autoremove | pv -W > /var/log/KS_aremove.log
   echo ""
   echo -e "${verde}$rmove removido com sucesso${NORMAL}"
   sleep 2
}

###### Repara dependências #####

function repair() {
  echo -e $ciano "Reparando erros de dependencias... Isso pode demorar um pouco"$NORMAL
  apt-get -f -y --force-yes install | pv -W > /var/log/KS_finstall.log
  apt-get -y --force-yes autoremove | pv -W > /var/log/KS_autremove.log
  apt-get clean | pv -W > /var/log/KS_clean.log
  dpkg --configure -a | pv -W > /var/log/KS_configa.log
  clear
  sleep 1
  echo -e $ciano "Trecho de código desenvolvido Black Hat Sec e traduzido por Anônimo000"
  sleep 1
  echo -e $verm"########################################################"$NORMAL;
  sleep 0.1
  echo -e $verde"           Black Hat Sec Presents :"$NORMAL;
  sleep 0.1
  echo -e $verm"########################################################"$NORMAL;
  sleep 0.1
  echo -e $verde"                 by D4RkNiK4s                          "$NORMAL;
  sleep 0.1
  echo -e $amarelo"    All rights reserved to Black Hat Sec."$ENDCOLOR;
  sleep 0.1
  echo -e $azul"           http://blackhatsec.org "$NORMAL;
  sleep 0.1
  echo -e $verm"########################################################"$NORMAL;
  sleep 0.5
  echo -e $amarelo"[SFAGEAS]:Limpando var/tmp..."$NORMAL
  sleep 0.5
  cd /var/tmp/
  sleep 0.5
  rm -fr /var/tmp/* --force
  clear
  echo -e $amarelo"[SFAGEAS]:Limpando /var/log/..."$NORMAL
  rm -rf /var/log/* -f
  rm -rf /var/cache/* -f
  echo ""
  echo -e $amarelo"[SFAGEAS]:Limpando /var/cache/..."$NORMAL
  echo ""
  sleep 0.5
  sudo rm -rf ~/root/.local/share/Trash/*
  sleep 0.5
  echo ""
  echo ""
  sleep 0.5
  cd ..
  sleep 0.5
  echo ""
  echo -e $amarelo"[SFAGEAS]:Limpando kernels antigos..."$NORMAL
  sudo aptitude purge $OLDKERNELS | pv -W > /dev/null
  sleep 0.5
  echo ""
  echo -e $amarelo"[SFAGEAS]:Corrigindo pacotes quebrados..."$NORMAL
  sudo apt-get check | pv -W > /dev/null ; sudo apt-get -f install | pv -W > /dev/null
  sleep 0.5
  echo -e $amarelo"[SFAGEAS]:Limpando arquivos da lixeira..."$NORMAL
  sleep 0.5
  rm -rf /home/*/.local/share/Trash/*/** &> /dev/null
  sleep 0.5
  rm -rf /root/.local/share/Trash/*/** &> /dev/null
  sleep 0.5
  sudo aptitude clean | pv -W > /dev/null
  sleep 0.5
  sudo apt-get autoremove && sudo apt-get autoclean && sudo apt-get purge && sudo apt-get clean | pv -W > /dev/null
  sleep 0.5
  echo ""
  echo ""
  echo -e $amarelo"[SFAGEAS]:Limpando configurações extras..."$NORMAL
  sudo aptitude purge $OLDCONF
  dpkg -l | grep '^rc' | awk '{print $2}' | sudo xargs dpkg --purge | pv -W > /dev/null
  sleep 0.5
  echo ""
  echo ""
  echo -e $amarelo"[SFAGEAS]:Limpando cache do apt novamente..."$NORMAL
  sudo aptitude clean | pv -W > /dev/null
  sleep 0.5
  echo ""
  echo ""
  echo -e $amarelo"[SFAGEAS]:Removendo arquivos de configuração antigos novamente..."$NORMAL
  sudo aptitude purge $OLDCONF
  sleep 0.5
  apt-get autoremove | pv -W >> /var/log/KS_autremove.log
  sleep 0.5
  apt-get clean | pv -W > /dev/null
  sleep 0.5
  echo -e $amarelo"[SFAGEAS]:Esvaziando lixeira..."$NORMAL

  echo ""
  echo ""
  rm -rf /home/*/.local/share/Trash/*/** &> /dev/null
  rm -rf /root/.local/share/Trash/*/** &> /dev/null
  echo ""
  clear
  echo -e $verm"###############################################"$NORMAL
  echo -e $verm"#               <<SFAGEAS>>                   #"$NORMAL
  echo -e $verm"#              Trabalho finalizado!!          #"$NORMAL
  echo -e $verm"###############################################"$NORMAL
  echo ""
  echo "Tenha um bom dia!"
  echo ""
  echo "Feito por D4RkNik0l4s, editado e traduzido por Anônimo000"
  exit

}

###### Procurar programas #####

function achar() {
  function progAcha() {
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Procurar               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   echo ""
   echo -e $amarelo"Digite o nome do programa:${NORMAL}"
   read ach
   echo -e $ciano""
   apt-cache pkgnames $ach | grep $ach
   echo ""
   echo -e "${verde}Pressione ${amarelo}[ Q ] ${verde}para voltar${NORMAL}"
   echo ""
   echo -e "${amarelo}Pressione ${verde}[ N ] ${amarelo}para uma nova busca${NORMAL}"
   read -n1 acharResp

   case $acharResp in

     Q | q)fazer;
           ;;

           n | N)reset;
                 progAcha;
                 ;;
      *)reset;
        progAcha;
    esac
}


### Programas extras a serem instalados/listados
 function cat-net() {
   function net-firefox() {
     echo -e "${verm}Instalando firefox... Aguarde...${NORMAL}"
     apt-get -y --force-yes install firefox | pv -W > /dev/null
     if [ $? == 0 ];then
     echo -e "${verde}Firefox instalado!${NORMAL}"
     sleep 1
   else
     echo -e "${verm}Problemas ao instalar o firefox!${NORMAL}"
     sleep 1
   fi
   }
   function net-chro() {
     echo -e "${verm}Instalando chromium... Aguarde...${NORMAL}"
     apt-get -y --force-yes install chromium | pv -W > /dev/null
     if [ $? == 0 ];then
     echo -e "${verde}Chromium instalado!${NORMAL}"
     sleep 1
   else
     echo -e "${verm}Problemas ao instalar o Chromium!${NORMAL}"
     sleep 1
   fi
 }
 function net-zilla() {
   echo -e "${verm}Instalando FileZilla... Aguarde...${NORMAL}"
   apt-get -y --force-yes install filezilla | pv -W > /dev/null
   if [ $? == 0 ];then
   echo -e "${verde}FileZilla instalado!${NORMAL}"
   sleep 1
 else
   echo -e "${verm}Problemas ao instalar o FileZilla!${NORMAL}"
   sleep 1
 fi
}
function net-torrent() {
  echo -e "${verm}Instalando Qbittorrent... Aguarde...${NORMAL}"
  apt-get -y --force-yes install qbittorrent | pv -W > /dev/null
  if [ $? == 0 ];then
  echo -e "${verde}Qbittorrent instalado!${NORMAL}"
  sleep 1
else
  echo -e "${verm}Problemas ao instalar o Qbittorrent!${NORMAL}"
  sleep 1
fi
}
function net-thun() {
  echo -e "${verm}Instalando Thunderbird... Aguarde...${NORMAL}"
  apt-get -y --force-yes install thunderbird | pv -W > /dev/null
  if [ $? == 0 ];then
  echo -e "${verde}Thunderbird instalado!${NORMAL}"
  sleep 1
else
  echo -e "${verm}Problemas ao instalar o Thunderbird!${NORMAL}"
  sleep 1
fi
}
function net-pidg() {
  echo -e "${verm}Instalando Pidgin... Aguarde...${NORMAL}"
  apt-get -y --force-yes install pidgin | pv -W > /dev/null
  if [ $? == 0 ];then
  echo -e "${verde}Pidgin instalado!${NORMAL}"
  sleep 1
else
  echo -e "${verm}Problemas ao instalar o Pidgin!${NORMAL}"
  sleep 1
fi
}

function net-hex() {
  echo -e "${verm}Instalando HexChat... Aguarde...${NORMAL}"
  apt-get -y --force-yes install hexchat | pv -W > /dev/null
  if [ $? == 0 ];then
  echo -e "${verde}Hexchat instalado!${NORMAL}"
  sleep 1
else
  echo -e "${verm}Problemas ao instalar o Hexchat!${NORMAL}"
  sleep 1
fi
}

function net-ssh() {
  echo -e "${verm}Instalando SSH... Aguarde...${NORMAL}"
  apt-get -y --force-yes install ssh | pv -W > /dev/null
  if [ $? == 0 ];then
  echo -e "${verde}SHH instalado!${NORMAL}"
  sleep 1
else
  echo -e "${verm}Problemas ao instalar o SSH!${NORMAL}"
  sleep 1
fi
}

   echo -e "${amarelo}1) ${verde}Firefox${NORMAL}"
   echo -e "${amarelo}2) ${verde}chromium${NORMAL}"
   echo -e "${amarelo}3) ${verde}filezilla${NORMAL}"
   echo -e "${amarelo}4) ${verde}Qbittorrent${NORMAL}"
   echo -e "${amarelo}5) ${verde}Thunderbird${NORMAL}"
   echo -e "${amarelo}6) ${verde}pidgin${NORMAL}"
   echo -e "${amarelo}7) ${verde}Hexchat${NORMAL}"
   echo -e "${amarelo}8) ${verde}SSH${NORMAL}"
   echo ""
   echo -e "${azul}Escolha uma das opções, ou pressione [Q] para voltar:${NORMAL}"
   read -n1 netResp
   case $netResp in
     1)reset;
       net-firefox;
       reset;
       achha;
       ;;

       2)reset;
         net-chro;
         reset;
         achha;
         ;;

         3)reset;
           net-zilla;
           reset;
           achha;
           ;;

           4)reset;
            net-torrent;
            reset;
            achha;
            ;;

            5)reset;
              net-thun;
              reset;
              achha;
              ;;

              6)reset;
                net-pidg;
                reset;
                achha;
                ;;

                7)reset;
                net-hex;
                reset;
                achha;
                ;;

                8)reset;
                  net-ssh;
                  reset;
                  achha;
                  ;;

                q | Q)reset;
                      fazer;
                      ;;

                      *)reset;
                        cat-net;
   esac

 }

function cat-game() {
  game-zone() {
    echo -e "${verm}Instalando Warzone2100... Aguarde...${NORMAL}"
    apt-get -y --force-yes install warzone2100 | pv -W > /dev/null
    if [ $? == 0 ];then
    echo -e "${verde}WarZone2100 instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o WarZone2100!${NORMAL}"
    sleep 1
  fi
  }
  game-tux() {
    echo -e "${verm}Instalando SuperTux... Aguarde...${NORMAL}"
    apt-get -y --force-yes install supertux | pv -W > /dev/null
    if [ $? == 0 ];then
    echo -e "${verde}SuperTux instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o SuperTux!${NORMAL}"
    sleep 1
  fi
  }
  game-wine() {
    echo -e "${verm}Instalando Wine e PlayOnLinux... Aguarde...${NORMAL}"
    apt-get -y --force-yes install wine playonlinux | pv -W > /dev/null
    apt-get install -f | pv -W >/dev/null
    if [ $? == 0 ];then
    echo -e "${verde}Emulador instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Emulador!${NORMAL}"
    sleep 1
  fi
  }
  game-wesh() {
    echo -e "${verm}Instalando Wesnoth... Aguarde...${NORMAL}"
    apt-get -y --force-yes install wesnoth | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Wesnoth instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Wesnoth!${NORMAL}"
    sleep 1
  fi
  }
  game-opar() {
    echo -e "${verm}Instalando OpenArena... Aguarde...${NORMAL}"
    apt-get -y --force-yes install openarena | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}OpenArena instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o OpenArena!${NORMAL}"
    sleep 1
  fi
  }
  echo -e "${amarelo}1) ${verde}Warzone2100${NORMAL}"
  echo -e "${amarelo}2) ${verde}SuperTux${NORMAL}"
  echo -e "${amarelo}3) ${verde}Emulador${NORMAL}"
  echo -e "${amarelo}4) ${verde}wesnoth${NORMAL}"
  echo -e "${amarelo}5) ${verde}Open Arena${NORMAL}"
  echo ""
  echo -e "${azul}Escolha uma das opções, ou pressione [Q] para voltar:${NORMAL}"
  read -n1 gameResp
  case $gameResp in
    1)reset;
      game-zone;
      reset;
      achha;
      ;;

      2)reset;
        game-tux;
        reset;
        achha;
        ;;

        3)reset;
         game-wine;
         reset;
         achha;
         ;;

         4)reset;
           game-wesh;
           reset;
           achha;
           ;;

           5)reset;
             game-opar;
             reset;
             achha;
             ;;

             q | Q)reset;
                   fazer;
                   ;;

                   *)reset;
                     cat-game;
esac
}

function cat-dev() {
  dev-atom() {
    echo -e "${verm}Instalando Atom... Aguarde...${NORMAL}"
    apt-get -y --force-yes install atom | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Atom instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Atom!${NORMAL}"
    sleep 1
  fi
  }
  dev-geay() {
    echo -e "${verm}Instalando Geany... Aguarde...${NORMAL}"
    apt-get -y --force-yes install geany | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Geany instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Geany!${NORMAL}"
    sleep 1
  fi
  }
  dev-blf() {
    echo -e "${verm}Instalando BlueFish... Aguarde...${NORMAL}"
    apt-get -y --force-yes install bluefish | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}BlueFish instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o BlueFish!${NORMAL}"
    sleep 1
  fi
  }
  dev-elp() {
    echo -e "${verm}Instalando Eclipse... Aguarde...${NORMAL}"
    apt-get -y --force-yes install eclipse | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Eclipse instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Eclipse!${NORMAL}"
    sleep 1
  fi
  }
  dev-cobl() {
    echo -e "${verm}Instalando CodeBlocks... Aguarde...${NORMAL}"
    apt-get -y --force-yes install codeblocks | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}CodeBlocks instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o CodeBlocks!${NORMAL}"
    sleep 1
  fi
  }
  dev-qtcr() {
    echo -e "${verm}Instalando QTcreator... Aguarde...${NORMAL}"
    apt-get -y --force-yes install qtcreator | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}QTcreator instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o QTcreator!${NORMAL}"
    sleep 1
  fi
  }

  dev-apa() {
    echo -e "${verm}Instalando Apache2... Aguarde...${NORMAL}"
    apt-get -y --force-yes install apache | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Apache instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Apache!${NORMAL}"
    sleep 1
  fi
  }

  echo -e "${amarelo}1) ${verde}Atom${NORMAL}"
  echo -e "${amarelo}2) ${verde}Geany${NORMAL}"
  echo -e "${amarelo}3) ${verde}BlueFish${NORMAL}"
  echo -e "${amarelo}4) ${verde}Eclipse${NORMAL}"
  echo -e "${amarelo}5) ${verde}CodeBlocks${NORMAL}"
  echo -e "${amarelo}6) ${verde}QTcreator${NORMAL}"
  echo -e "${amarelo}7) ${verde}Apache${NORMAL}"
  echo ""
  echo -e "${azul}escolha uma das opções, ou [Q] para voltar:${NORMAL}"
  read -n1 devResp
  case $devResp in
    1)reset;
      dev-atom;
      reset;
      achha
      ;;

      2)reset;
        dev-geay;
        reset;
        achha;
        ;;

        3)reset;
          dev-blf;
          reset;
          achha;
          ;;

          4)reset;
            dev-elp;
            reset;
            achha;
            ;;

            5)reset;
              dev-cobl;
              reset;
              achha;
              ;;

              6)reset;
                dev-qtcr;
                reset;
                achha;
                ;;

                7)reset;
                dev-apa;
                reset;
                achha;
                ;;

                q | Q)reset;
                      achha;
                      ;;

                      *)reset;
                        cat-dev;
            esac


}

function cat-graf() {
  function graf-gimp() {
    echo -e "${verm}Instalando Gimp... Aguarde...${NORMAL}"
    apt-get -y --force-yes install gimp | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Gimp instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Gimp!${NORMAL}"
    sleep 1
  fi
  }
  function graf-ink() {
    echo -e "${verm}Instalando Inkscape... Aguarde...${NORMAL}"
    apt-get -y --force-yes install inkscape | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Inkscape instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Inkscape!${NORMAL}"
    sleep 1
  fi
  }
  function graf-bldr() {
    echo -e "${verm}Instalando Blender... Aguarde...${NORMAL}"
    apt-get -y --force-yes install blender | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Blender instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Blender!${NORMAL}"
    sleep 1
  fi
  }
  function graf-kolo() {
    echo -e "${verm}Instalando Kolourpaint4... Aguarde...${NORMAL}"
    apt-get -y --force-yes install kolourpaint4 | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Kolourpaint4 instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Kolourpaint4!${NORMAL}"
    sleep 1
  fi
  }
  function graf-mypt() {
    echo -e "${verm}Instalando MyPaint... Aguarde...${NORMAL}"
    apt-get -y --force-yes install mypaint | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}MyPaint instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o MyPaint!${NORMAL}"
    sleep 1
  fi
  }
  echo -e "${amarelo}1) ${verde}GIMP${NORMAL}"
  echo -e "${amarelo}2) ${verde}Inkscape${NORMAL}"
  echo -e "${amarelo}3) ${verde}Blender${NORMAL}"
  echo -e "${amarelo}4) ${verde}Kolourpaint4${NORMAL}"
  echo -e "${amarelo}5) ${verde}MyPaint${NORMAL}"
  echo ""
  echo -e "${azul}escolha uma das opções, ou [Q] para voltar:${NORMAL}"
  read -n1 grafResp
  case $grafResp in
    1)reset;
      graf-gimp;
      reset;
      achha;
      ;;

      2)reset;
        graf-ink;
        reset;
        achha;
        ;;

        3)reset;
         graf-bldr;
         reset;
         achha;
         ;;

         4)reset;
           graf-kolo;
           reset;
           achha;
           ;;

           5)reset;
             graf-mypt;
             reset;
             achha;
             ;;

             q | Q)reset;
                   achha;
                   ;;

                   *)reset;
                     cat-graf;
                     ;;

                   esac
}
function cat-auvid() {
  function auvid-vlc() {
    echo -e "${verm}Instalando VLC... Aguarde...${NORMAL}"
    apt-get -y --force-yes install vlc | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}VLC instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o VLC!${NORMAL}"
    sleep 1
  fi
  }
  function auvid-rth() {
    echo -e "${verm}Instalando Rhythmbox... Aguarde...${NORMAL}"
    apt-get -y --force-yes install rhythmbox | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Rhythmbox instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Rhythmbox!${NORMAL}"
    sleep 1
  fi
  }
  function auvid-kde() {
    echo -e "${verm}Instalando Kdenlive... Aguarde...${NORMAL}"
    apt-get -y --force-yes install kdenlive | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Kdenlive instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Kdenlive!${NORMAL}"
    sleep 1
  fi
  }
  function auvid-bso() {
    echo -e "${verm}Instalando Brasero... Aguarde...${NORMAL}"
    apt-get -y --force-yes install brasero | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Brasero instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Brasero!${NORMAL}"
    sleep 1
  fi
  }
  function auvid-kzm() {
    echo -e "${verm}Instalando Kazam... Aguarde...${NORMAL}"
    apt-get -y --force-yes install kazam | pv -W > /dev/null
    apt-get
    if [ $? == 0 ];then
    echo -e "${verde}Kazam instalado!${NORMAL}"
    sleep 1
  else
    echo -e "${verm}Problemas ao instalar o Kazam!${NORMAL}"
    sleep 1
  fi
  }
  echo -e "${amarelo}1) ${verde}VLC${NORMAL}"
  echo -e "${amarelo}2) ${verde}Rhythmbox${NORMAL}"
  echo -e "${amarelo}3) ${verde}Kdenlive${NORMAL}"
  echo -e "${amarelo}4) ${verde}Brasero${NORMAL}"
  echo -e "${amarelo}5) ${verde}Kazam${NORMAL}"
  echo ""
  echo -e "${azul}escolha uma das opções, ou [Q] para voltar:${NORMAL}"
  read -n1 grafResp
  case $grafResp in
    1)reset;
      auvid-vlc;
      reset;
      achha;
      ;;

      2)reset;
        auvid-rth;
        reset;
        achha;
        ;;

        3)reset;
         auvid-kde;
         reset;
         achha;
         ;;

         4)reset;
           auvid-bso;
           reset;
           achha;
           ;;

           5)reset;
             auvid-kzm;
             reset;
             achha;
             ;;

             q | Q)reset;
                   achha;
                   ;;

                   *)reset;
                     cat-auvid;
                     ;;

                   esac
}
echo -e "${ciano}0) ${amarelo}Procurar${NORMAL}"
echo ""
echo -e "${amarelo}1) ${ciano}Internet${NORMAL}"
echo -e "${amarelo}2) ${ciano}Jogos${NORMAL}"
echo -e "${amarelo}3) ${ciano}Desenvolvimento${NORMAL}"
echo -e "${amarelo}4) ${ciano}Gráficos${NORMAL}"
echo -e "${amarelo}5) ${ciano}Som e vídeo${NORMAL}"
echo ""
echo -e "${azul}escolha uma das opções, ou [Q] para voltar:${NORMAL}"
read -n1 cateResp
case $cateResp in
  1)reset;
    cat-net;
    reset;
    achha;
    ;;

    2)reset;
     cat-game;
     reset;
     achha;
     ;;

     3)reset;
       cat-dev;
       reset;
       achha;
       ;;

       4)reset;
         cat-graf;
         reset;
         achha;
         ;;

         5)reset;
           cat-auvid;
           reset;
           achha;
           ;;

           0)reset;
             progAcha;
             ;;
           q | Q)reset;
                 fazer;
                  ;;

                  *)reset;
                    achha;

      esac

}

###### Procurar arquivos #####

function arquivos() {

function arqpgp() {

 which pgp > /dev/null
 if [ $? == 0 ];then

function arqCrypt() {
  echo -e "${ciano}Selecione o arquivo que deseja criptografar:${NORMAL}"
  sleeep 1
  arqCrp=`zenity --file-selection --title="Selecione o arquivo"`
  reset
  echo -e "${amarelo}Insira a senha do arquivo${NORMAL}"
  pgp -c $arqCrp
  if [ $? == 0 ];then
    echo -e "${verde}Arquivo criptagrafado com sucesso, procure o arquivo $arqCrp com extensão .pgp"
    sleep 2
  else
    echo -e "${verm}Erro ao criptografar arquivo! Tente Novamente.${NORMAL}"
    sleep 1
  fi
}

function arqdecry() {
  echo -e "${ciano}Selecione o arquivo .pgp que deseja descriptografar, em seguida digite a senha dele:${NORMAL}"
  sleep 3
  arqDcry=`zenity --file-selection --file-filter=*.pgp --title="Selecione o arquivo .pgp"`
  reset
  echo -e "${ciano}Insira a senha para descriptografar:${NORMAL}"
  pgp $arqDcry
  if [ $? == 0 ];then
    echo -e "${verde}Arquivo descriptagrafado com sucesso!"
    sleep 1
  else
    echo -e "${verm}Erro ao descriptografar arquivo! Tente Novamente.${NORMAL}"
    sleep 1
  fi
}

echo -e "${verde}1) ${azul}Criptografar arquivo${NORMAL}"
echo -e "${verde}2) ${azul}Descriptografar arquivo${NORMAL}"
echo ""
echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
read -n1 cryptResp

case $cryptResp in
  1)reset;
    arqCrypt;
    reset;
    fazer;

    ;;

    2)reset;
    arqdecry;
    reset;
    fazer;
    ;;

    q | Q)fazer;
    ;;

    *)reset;
    arqpgp;
    ;;

  esac

else
  echo -e "${verm}Você precisa ter o ${amarelo}pgp${verm} instalado para usar essa opção.${NORMAL}"
  sleep 2
fi

}
function location() {
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Procurar               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   echo ""
   echo -e $amarelo"Digite o nome do arquivo:${NORMAL}"
   read achha
   echo -e "${verm}Atualizando banco de dados, dependendo do espaço ocupado no seu HD isso${NORMAL}"
   echo -e "${verm}poderá levar alguns minutos. Aguarde...${NORMAL}"
   echo ""
   updatedb
   locate $achha | grep $achha
   echo ""
   echo -e "${verde}Pressione ${amarelo}[ Q ] ${verde}para voltar${NORMAL}"
   read -n1 locatResp

   case $locatResp in

     Q | q)fazer;
           ;;

      *)reset;
        location;
    esac
}

echo -e "${ciano}O que deseja fazer?${NORMAL}"
echo ""
echo -e "${verm}1) ${verde}Procurar arquivos${NORMAL}"
echo -e "${verm}2) ${verde}Criptografar/Descriptografar arquivos${NORMAL}"
echo ""
echo -e "${branco}Pressione [Q] para voltar ${NORMAL}"
read -n1 arquivosResposta
case $arquivosResposta in

  1)reset;
    location;
    ;;

    2)reset;
      arqpgp;
      ;;

      Q | q)fazer;
      ;;

      *)reset;
      arquivos;

    esac

}

##### Atualizar distro ######

function github() {
  if [ -e /var/log/git1.log ];then
  if [ -e /var/log/git2.log ];then
    echo -e "${verm}Você está na pasta do projeto?[s/n]${NORMAL}"
    read gitCheck
    if [[ $gitCheck = Y || $gitCheck = y ]];then
      echo -e"${verde}OK! Então vamos continuar${NORMAL}"
      sleep 1
      echo -e "${amarelo}Adicionando todas as suas mudanças ao servidor local...${NORMAL}"
      git add .
      echo ""
      echo -e "${azul}Adicione um comentário para seu projeto:${NORMAL}"
      read gitComent
      git commit -m "$gitComent"
      echo ""
      echo -e"${verde}OK! Tudo terminado, seu projeto será lançado no github, insira seu login e senha para terminar${NORMAL}"
      git push
      if [ $? == 0 ];then
        rm /var/log/gitlog.log
        echo -e "${verde}Trabalho finalizado! Símples não.${NORMAL}"
        sleep 1
      else
        echo -e "${verm}Ops! Algo deu errado, tente novamente${NORMAL}"
        exit 1
      fi
    else
      echo -e "${verm}Você precisa estar na pasta do projeto para o script funcionar corretamente!${NORMAL}"
      sleep 1
      exit 1
    fi
  else
    echo "Segunda etapa" > /var/log/git2.log
    echo -e "${verm}Lembre-se você deve realizar o fork do projeto para o seu github${NORMAL}"
    sleep 2
    clear
    echo -e "${azul}Insira a url do projeto${branco}(ex: github.com/anony000/knife_system)${NORMAL}"
    read gitLink
    echo -e "${amarelo}Baixando o projeto para você modificar...${NORMAL}"
    git clone $gitLink
    echo ""
    echo -e "${amarelo}OK!, faça as modificações necessárias, quando terminar volte aqui${NORMAL}"
    echo -e "${amarelo}Mas lembre-se esteja na pasta do seu projeto, caso contrário nada dará certo, OK?${NORMAL}"
    echo -e "${amarelo}Até logo!${NORMAL}"
    sleep 3
  fi

else
  echo "primeira etapa" > /var/log/git1.log
  echo -e "${azul}Antes de tudo vamos configurar seu email, digite o mesmo do github${NORMAL}"
  read gitMail
  sleep 1
  echo ""
  git config --global user.email "$gitMail"
  clear
  echo -e "${azul}Agora digite seu nome de usuário${NORMAL}"
  read igtUser
  sleep 1
  echo ""
  git config --global user.name "$gitUser"
  echo ""
  echo "${azul}Volte aqui quando desejar iniciar ${NORMAL}"
  sleep 1
  clear
fi

}

########### Aparência ##########
#                              #
################################

function aparencia() {
  function tema() {
    #### Instalar temas ####
function instTema() {
    echo -e "${ciano}Selecione a pasta onde se encontra seu tema${NORMAL}"
    echo -e "${ciano}Basta clicar em cima da pasta uma vez e em seguida em OK${NORMAL}"
    sleep 3
    theme=`zenity --file-selection --directory --title="Selecione a pasta do tema"`

    if [ -z $theme ];then
      echo -e "${verm}Nenhum tema selecionado!${NORMAL}"
      sleep 1
      reset
      tema
    else
    clear
    mv -f $theme /usr/share/themes
    sleep 2
    echo -e "${verde}Tema adicionado com sucesso!${NORMAL}"
    sleep 1
    echo -e "${branco}O tema já está pronto para ser instalado, basta apenas${NORMAL}"
    echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
    sleep 2
  fi
  }

  #### Remover temas ######
  function rmTema () {
    echo -e "${branco}Insira o nome do tema a se removido:${NORMAL}"
    echo ""
    read rmtheme

    if [ -e /usr/share/themes/$rmtheme ];then
      sleep 2
      rm -r /usr/share/themes/$rmtheme
      echo -e "${verde}Tema removido com sucesso!"
      sleep 1
      echo -e "${azul}Basta apenas você ir em aparência e muda-lo${NORMAL}"
      sleep 2
      clear
      removeTemas
    else
      echo -e "${verm}Tema não encontrado!"
      sleep 2
      clear
      rmTema
    fi
  }

  #### Obter tema online #####
  function temaOn() {

    function temaon-arc() {
      echo -e "${ciano}Instalando tema ARC, aguarde...${NORMAL}"
      echo "deb http://download.opensuse.org/repositories/home:/Horst3180/xUbuntu_15.04/ /" >> /etc/apt/sources.list.d/arc-theme.list
      wget -q -O- http://download.opensuse.org/repositories/home:Horst3180/xUbuntu_15.04/Release.key | sudo apt-key add -
      apt-get update | pv -W >/dev/null
      apt-get install -y --force-yes arc-theme | pv -W > /dev/null
      gsettings set com.canonical.desktop.interface scrollbar-mode normal
      clear
      echo -e "${branco}O tema já está pronto para ser instalado, basta apenas${NORMAL}"
      echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
      sleep 3
    }
    function temaon-xen() {
      echo -e "${ciano}Instalando tema Xenlism, aguarde...${NORMAL}"
      apt-key adv --keyserver keys.gnupg.net --recv-keys 90127F5B
      echo "deb http://downloads.sourceforge.net/project/xenlism-wildfire/repo deb/" | tee -a /etc/apt/sources.list
      apt-get update
      apt-get install -y --force-yes xenlism-minimalism-theme | pv -W > /dev/null
      clear
      echo -e "${branco}O tema já está pronto para ser instalado, basta apenas${NORMAL}"
      echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
      sleep 3
    }
    function temaon-acv() {
      echo -e "${ciano}Instalando tema Acvamarin, aguarde...${NORMAL}"
      wget https://www.dropbox.com/s/soeoqd7seivfqrr/acvamarin_1.0_all.deb?dl=0 -O Acvamarin.deb
      dpkg -i Acvamarin.deb | pv -W > /dev/null;rm Acvamarin.deb
      apt-get install -f -y --force-yes | pv -W > /dev/null
      clear
      echo -e "${branco}O tema já está pronto para ser instalado, basta apenas${NORMAL}"
      echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
      sleep 3
    }

    function temaon-swt() {
      echo -e "${ciano}Instalando tema Switch, aguarde...${NORMAL}"
      apt-add-repository ppa:numix/ppa | pv -W > /dev/null
      apt-get install -y --force-yes switch-theme | pv -W > /dev/null
      apt-get install -f -y --force-yes | pv -W > /dev/null
      clear
      echo -e "${branco}O tema já está pronto para ser instalado, basta apenas${NORMAL}"
      echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
      sleep 3
    }


    function temaon-flat() {
      echo -e "${ciano}Baixando e instalando tema Flatbulous, aguarde...${NORMAL}"
      sleep 1
      echo ""
      wget https://www.dropbox.com/s/y1mxjlyp1h25jjp/flatabulous.zip?dl=0 -O flatabulous.zip
      unzip flatabulous.zip -d /usr/share/themes;rm -rf flatbulous.zip
      echo ""
      echo -e "${verde}Tudo pronto! Basta você ir em configurações do tweak-tool e setar seu tema"
      sleep 1
    }

    echo -e "${amarelo}Obter temas online, basta selecionar e será instalado${NORMAL}"
    echo ""
    echo -e "${azul}1) ${ciano}Acvamarin${branco}(+ícone)${NORMAL}"
    echo -e "${azul}2) ${ciano}ARC${NORMAL}"
    echo -e "${azul}3) ${ciano}Xenlism${NORMAL}"
    echo -e "${azul}4) ${ciano}Switch${NORMAL}"
    echo -e "${azul}5) ${ciano}Flatbulous${NORMAL}"
    echo ""
    echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
    echo -e "${verm}Escolha uma opção:${NORMAL}"
    read -n1 temaOnResp
    case $temaOnResp in
      1)reset;
        temaon-acv;
        reset;
        tema;
        ;;

        2)reset;
          temaon-arc;
          reset;
          tema;
          ;;

          3)reset;
            temaon-xen;
            reset;
            tema;
            ;;

            4)reset;
              temaon-swt;
              reset;
              tema;
              ;;

              5)reset;
                temaon-flat;
                reset;
                tema;
                ;;


                q | Q)reset;
                      aparencia;
                      ;;

                      *)reset;
                        tema;

    esac
  }
  echo -e "${ciano}             TEMAS${NORMAL}"
  echo ""
  echo -e "${verde}1) ${amarelo}Instalar temas${NORMAL}"
  echo -e "${verde}2) ${amarelo}Remover temas${NORMAL}"
  echo -e "${verde}3) ${amarelo}Temas online${NORMAL}"
  echo ""
  echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
  echo -e "${verm}Escolha uma opção:${NORMAL}"
  read -n1 temaResp
  case $temaResp in
    1)reset;
      instTema;
      reset;
      aparencia;
      ;;

      2)reset;
        rmTema;
        reset;
        aparencia;
        ;;

        3)reset;
          temaOn;
          reset;
          aparencia;
          ;;

          q | Q)reset;
                aparencia;
                ;;

                *)reset;
                  tema;
                esac
 }

  ##### Cursor ######

 function cursor() {
   ###Instalar cursor ###
   function instCur() {
   echo -e "${ciano}Selecione a pasta onde se encontra seu cursor${NORMAL}"
   echo -e "${ciano}Basta clicar em cima da pasta uma vez e em seguida em OK${NORMAL}"
   sleep 3
   curso=`zenity --file-selection --directory title="Selecione a pasta do cursor"`

   if [ -e .icons ];then
     if [ -z $curso ];then
       echo -e "${verm}Nenhum cursor selecionado!${NORMAL}"
       sleep 1
       reset
       tema
     else
    mv $curso .icons
    sleep 2
    echo -e "${verde}Cursor adicionado com sucesso!${NORMAL}"
    sleep 1
    clear
    echo -e "${branco}O cursor já está pronto para ser instalado, basta apenas${NORMAL}"
    echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
    sleep 3
  fi
  else
    echo -e "${verm}Diretório .icons não foi encontrado em HOME${NORMAL}"
    echo -e "${ciano}Selecione a sua pasta home, basta clicar uma vez e em Ok${NORMAL}"
    sleep 3
    curHome=`zenity --file-selection --directory`
    cd $curHome
    echo ""
    echo -e "${azul}Criando diretório em sua home... "
    mkdir .icons
    sleep 2
    echo -e "${verde}Diretório criado, rode o comando novamente${NORMAL}"
    sleep 2
    clear
    cursor

  fi
 }
 ##### Remover Cursor ######

   function rmCursor() {
     echo -e "${branco}Insira o nome do cursor a ser removido:${NORMAL}"
     echo -e "${branco}Certifique-se que você esteja em sua pasta home${NORMAL}"
     echo ""
     read rmcurso

     if [ -e .icons/$rmcurso ];then
       sleep 2
       rm -r .icons/$rmcurso
       echo -e "${verde}Cursor removido com sucesso${NORMAL}"
       sleep 1
       echo -e "${branco}Basta apenas você ir em aparência e muda-lo${NORMAL}"
       sleep 2
       removeTemas
     else
       echo -e "${verm}Cursor não encontrado!${NORMAL}"
       echo -e "${branco}Certifique-se de ter digitado corretamente o nome do cursor${NORMAL}"
       echo -e "${branco}E também que você esteja em sua home${NORMAL}"
       echo -e "${ciano}Entre em sua pasta home, basta clicar uma vez nela e em OK${NORMAL}"
       sleep 7
       rmCurHome=`zenity --file-selection --directory`
       cd $rmCurHome
       reset
       rmCursor
     fi
   }
   echo -e "${ciano}             Cursor${NORMAL}"
   echo ""
   echo -e "${verde}1) ${amarelo}Instalar cursor${NORMAL}"
   echo -e "${verde}2) ${amarelo}Remover cursor${NORMAL}"
   echo ""
   echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
   echo -e "${verm}Escolha uma opção:${NORMAL}"
   read -n1 cursoResp
   case $cursoResp in
     1)reset;
       instCur;
       reset;
       aparencia;
       ;;

       2)reset;
         rmCursor;
         reset;
         aparencia;
         ;;

         q | Q) reset;
               aparencia;
               ;;

               *)reset;
                 curso;
               esac
 }

 ##### Ícones #####

  function icone() {
    function instIcon() {
    echo -e "${ciano}Selecione a pasta onde se encontra seu ícone${NORMAL}"
    echo -e "${ciano}Basta clicar em cima da pasta uma vez e em seguida em OK${NORMAL}"
    sleep 3
    icon=`zenity --file-selection --directory --title="Selecione seu ícone"`

    if [ -z $icon ];then
      echo -e "${verm}Nenhum ícone selecionado!${NORMAL}"
      sleep 1
      reset
      tema
    else
    clear
    mv -f $icon /usr/share/icons
    sleep 2
    echo -e "${verde}Ícone adicionado com sucesso!${NORMAL}"
    sleep 1
    clear
    echo -e "${branco}O ícone já está pronto para ser instalado, basta apenas${NORMAL}"
    echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
    sleep 3
  fi
}

###### Remover ícones ######

  function rmIcones() {
    echo -e "${branco}Insira o nome do ícone a ser removido:${NORMAL}"
    echo ""
    read rmicon

    if [ -e /usr/share/icons/$rmicon ];then
      sleep 2
      rm -r /usr/share/icons/$rmicon
      echo -e "${verde}Ícone removido com sucesso!${NORMAL}"
      sleep 1
      echo -e "${branco}Basta apenas você ir em aparência e muda-lo${NORMAL}"
      sleep 2
      clear
      removeTemas
    else
      echo -e "${verm}Ícone não encontrado!${NORMAL}"
      sleep 2
      clear
      rmIcones
    fi
  }
  function iconOn() {
    function iconon-pape() {
      echo -e "${ciano}Instalando ícone Paper, aguarde...${NORMAL}"
      add-apt-repository ppa:snwh/pulp -y
      apt-get update | pv -W > /dev/null
      apt-get install -y --force-yes paper-icon-theme | pv -W > /dev/null
      clear
      echo -e "${branco}O ícone já está pronto para ser instalado, basta apenas${NORMAL}"
      echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
      sleep 3
    }
    function iconon-moka() {
      echo -e "${ciano}Instalando ícone Moka, aguarde...${NORMAL}"
      add-apt-repository ppa:moka/stable -y
      apt-get update | pv -W > /dev/null
      apt-get install -y --force-yes moka-icon-theme | pv -W > /dev/null
      clear
      echo -e "${branco}O ícone já está pronto para ser instalado, basta apenas${NORMAL}"
      echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
      sleep 3
    }
    function iconon-viva() {
      echo -e "${ciano}Instalando ícone Vivacious, aguarde...${NORMAL}"
      add-apt-repository ppa:ravefinity-project/ppa -y
      apt-get update | pv -W > /dev/null
      apt-get install -y --force-yes vivacious-colors | pv -W > /dev/null
      clear
      echo -e "${branco}O ícone já está pronto para ser instalado, basta apenas${NORMAL}"
      echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
      sleep 3
    }
    function iconon-spfl() {
      echo -e "${ciano}Instalando ícone Super Flat, aguarde...${NORMAL}"
      wget https://www.dropbox.com/s/630d0imj0i5q2vn/Super%20Flat%20Remix.zip?dl=0 -O SuperFlat.zip
      unzip SuperFlat.zip -d /usr/share/themes; rm SuperFlat.zip
      clear
      echo -e "${branco}O ícone já está pronto para ser instalado, basta apenas${NORMAL}"
      echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
      sleep 3
    }
    function iconon-acv() {
      echo -e "${ciano}Instalando ícone Acvamarin, aguarde...${NORMAL}"
      wget https://www.dropbox.com/s/soeoqd7seivfqrr/acvamarin_1.0_all.deb?dl=0 -O Acvamarin.deb
      dpkg -i Acvamarin.deb | pv -W > /dev/null;rm Acvamarin.deb
      apt-get install -f -y --force-yes | pv -W > /dev/null
      clear
      echo -e "${branco}O ícone já está pronto para ser instalado, basta apenas${NORMAL}"
      echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
      sleep 3
    }
    echo -e "${amarelo}Obter ícones online, basta selecionar e será instalado${NORMAL}"
    echo ""
    echo -e "${azul}1) ${ciano}Paper${NORMAL}"
    echo -e "${azul}2) ${ciano}Moka${NORMAL}"
    echo -e "${azul}3) ${ciano}Vivacious${NORMAL}"
    echo -e "${azul}4) ${ciano}Super Flat${NORMAL}"
    echo -e "${azul}5) ${ciano}Acvamarin${branco}(+tema)${NORMAL}"
    echo ""
    echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
    echo -e "${verm}Escolha uma opção:${NORMAL}"
    read -n1 temaOnResp
    case $temaOnResp in
      1)reset;
        iconon-pape;
        reset;
        icone;
        ;;

        2)reset;
          iconon-moka;
          reset;
          icone;
          ;;

          3)reset;
            iconon-viva;
            reset;
            icone;
            ;;

            4)reset;
              iconon-spfl;
              reset;
              icone;
              ;;

              5)reset;
                iconon-acv;
                reset;
                icone;
                ;;

                q | Q)reset;
                      aparencia;
                      ;;

                      *)reset;
                        tema;

    esac
  }
  echo -e "${ciano}             Ícones${NORMAL}"
  echo ""
  echo -e "${verde}1) ${amarelo}Instalar ícones${NORMAL}"
  echo -e "${verde}2) ${amarelo}Remover ícones${NORMAL}"
  echo -e "${verde}3) ${amarelo}Ícones online${NORMAL}"
  echo ""
  echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
  echo -e "${verm}Escolha uma opção:${NORMAL}"
  read -n1 temaResp
  case $temaResp in
    1)reset;
      instIcon;
      reset;
      aparencia;
      ;;

      2)reset;
        rmIcones;
        reset;
        aparencia;
        ;;

        3)reset;
          iconOn;
          reset;
          aparencia;
          ;;

          q | Q)reset;
                aparencia;
                ;;

                *)reset;
                  icone;
                esac
}
function tool() {
  echo -e "${azul}Instalando gnome-tweak-tool${NORMAL}"
  sleep 1
  echo ""
  which gnome-tweak-tool >/dev/null
  if [ $? == 0 ];then
  apt-get -y install gnome-tweak-tool | pv -W >/dev/null
else
  echo -e "${verm}Programa já instalado!${NORMAL}"
  sleep 1
fi
}
function conk() {
  function instConk() {
  echo -e "${ciano}Selecione a pasta onde se encontra seu conky${NORMAL}"
  echo -e "${ciano}Basta clicar em cima da pasta uma vez e em seguida em OK${NORMAL}"
  sleep 3
  conkyResp=`zenity --file-selection --directory --title="Selecione seu tema para o conky"`
  if [ -e .conky ];then
    if [ -z $conkyResp ];then
      echo -e "${verm}Nenhum tema para o conky selecionado!${NORMAL}"
      sleep 1
      reset
      tema
    else
      echo -e "${azul}Instalando conky...${NORMAL}"
      mv $conkyResp .conky
      sleep 1
      echo -e "${verde}Concluído!${NORMAL}"
      sleep 1
      echo -e "${branco}Para instalar definitivamente instale o Conky Manager${NORMAL}"
      echo -e "${branco}Ele pode ser encontrado para baixar na opção F) Lista de programas do script${NORMAL}"
      sleep 7
      reset
      tema
    fi
  else
    echo -e "${verm}Pasta .conky na sua pasta home não encontrada!${NORMAL}"
    echo -e "${ciano}Selecione a sua pasta home, basta clicar uma vez e em Ok${NORMAL}"
    sleep 3
    conkHome=`zenity --file-selection --directory`
    cd $conkHome
    echo -e "${azul}Criando pasta .conky em sua home${NORMAL}"
    mkdir .conky
    echo -e "${verde}Pronto!${NORMAL}"
    sleep 1
    echo -e "${ciano}Tente novamente${NORMAL}"
    sleep 1
    reset
    conk
  fi
}
function rmConk() {
  echo -e "${ciano}Digite o nome do conky à ser removido${NORMAL}"
  echo -e "${branco}Levando em conta que você esteja em sua pasta home${NORMAL}"
  echo ""
  read rmConkResp
  if [ -e .conky/$rmConkResp ];then
    echo -e "${azul}Removendo tema do conky...${NORMAL}"
    rm .conky/$rmConkResp
    sleep 1
    echo -e "${verde}Concluído!${NORMAL}"
    sleep 1
    reset
    removeTemas
  else
    echo -e "${verm}Conky não encontrado!${NORMAL}"
    echo -e "${branco}Certifique-se de ter digitado corretamente o nome do conky${NORMAL}"
    echo -e "${branco}E também que você esteja em sua home${NORMAL}"
    echo -e "${ciano}Entre em sua pasta home, basta clicar uma vez nela e em OK${NORMAL}"
    sleep 7
    rmConHom=`zenity --file-selection --directory`
    cd $rmConHom
    reset
    rmConk
  fi
}
echo -e "${ciano}             Conky${NORMAL}"
echo ""
echo -e "${verde}1) ${amarelo}Instalar conky${NORMAL}"
echo -e "${verde}2) ${amarelo}Remover conky${NORMAL}"
echo ""
echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
echo -e "${verm}Escolha uma opção:${NORMAL}"
read -n1 conkResp
case $conkResp in
  1)reset;
    instConk;
    reset;
    aparencia;
    ;;

    2)reset;
      rmConk;
      reset;
      aparencia;
      ;;

      q | Q) reset;
            aparencia;
            ;;

            *)reset;
              curso;
            esac
}
function temgimp() {
  echo -e "${ciano}Instalando tema do PhotoShop no gimp, aguarde...${NORMAL}"
  echo -e "${branco}byDiolinux${NORMAL}"
  sleep 2
  if [ -e .gimp* ];then
    rm -r .gimp*
    wget https://www.dropbox.com/s/prvfepg482u024u/PhotoGimp.zip?dl=0 -O PhotoGIMP.zip
    unzip PhotoGIMP.zip
    clear
    echo -e "${verde}Tema instalado, basta iniciar o GIMP${NORMAL}"
    echo -e "${branco}Em caso de problemas quanto a tela, delete o arquivo /home/usuario/.gimp/sessionrc${NORMAL}"
    sleep 2
  else
    echo -e "${verm}Pasta .gimp não encontrada!${NORMAL}"
    echo -e "${branco}Certifique-se de estar em sua home e que o gimp esteja instalado${NORMAL}"
    sleep 2
    reset
    temgimp
  fi
}
  echo -e "${amarelo}1) ${azul} Temas${NORMAL}"
  echo -e "${amarelo}2) ${azul} Cursores${NORMAL}"
  echo -e "${amarelo}3) ${azul} Ícones${NORMAL}"
  echo -e "${amarelo}4) ${azul} Conky${NORMAL}"
  echo -e "${amarelo}5) ${azul} Gnome-Tweak-Tool${NORMAL}"
  echo -e "${amarelo}6) ${azul} PhotoGimp${branco}(extra)${NORMAL}"
  echo ""
  echo -e "${azul}X) ${amarelo}Voltar ao menu principal${NORMAL}"
  read -n1 temeInsta

  while [ temeInsta != '' ]
  do
    case $temeInsta in

      1) reset;
         tema;
         reset;
         aparencia;
         ;;

         2) reset;
            cursor;
            reset;
            aparencia;
            ;;

            3) reset;
               icone;
               reset;
               aparencia;
               ;;

               4)reset;
                 conk;
                 reset;
                 aparencia;
                 ;;

               5) reset;
                  tool;
                  reset;
                  aparencia;
                  ;;

                  6)reset;
                    temgimp;
                    reset;
                    aparencia;
                    ;;

                  x) fazer;
                     ;;

                     *)reset;
                       aparencia;
                       ;;
    esac
done
}

############# Firewall ##################

# Área destinada a usuários avançados que possuam conhecimentos para modificar
# esse pequeno firewall de acordo com suas necessidades

function seguranca() {

function firew() {
 startFire() {
   clear
   echo -e "${verm} ATENÇÃO!${NORMAL}"
   echo ""
   sleep 1
   echo -e ${amarelo}"Ele pode não funcionar em algumas máquinas"
   echo -e ${amarelo}"dependendo muito dos serviços que nela roda"
   echo ""
   echo -e ${branco}"Edite-o de acordo com suas necessidades${NORMAL}"
   echo -e "${branco}Caso tenha alguns serviços que o firewall bloqueia${NORMAL}"
   echo -e "${branco}basta apenas descomentar a linha com o nome do serviço no firewall${NORMAL}"
   sleep 10
   echo ""
   echo -e "${ciano}Iniciando firewall...${NORMAL}"
   sleep 1
   clear
   iptables -F INPUT
   iptables -F OUTPUT
   iptables -F FORWARD
   iptables -F -t filter
   iptables -F POSTROUTING -t nat
   iptables -F PREROUTING -t nat
   iptables -F OUTPUT -t nat
   iptables -F -t nat
   iptables -t nat -F
   iptables -t mangle -F
   iptables -X
   iptables -Z
   iptables -t nat -Z
   iptables -t mangle -Z
   iptables -P INPUT ACCEPT
   iptables -P OUTPUT ACCEPT
   iptables -P FORWARD ACCEPT
   iptables -P INPUT DROP
   iptables -P FORWARD DROP
   iptables -P OUTPUT DROP
   iptables -A INPUT -i lo -d 127.0.0.1 -j ACCEPT
   iptables -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/s -j ACCEPT
   iptables -A INPUT -p icmp --icmp-type echo-request -j DROP
   i=/proc/sys/net/ipv4
   echo "0" > /proc/sys/net/ipv4/ip_forward
   echo "1" > $i/tcp_syncookies
   echo "1" > $i/icmp_echo_ignore_broadcasts
   echo "1" > $i/icmp_ignore_bogus_error_response
   echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route
   echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects
   echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
   echo 1 > /proc/sys/net/ipv4/tcp_syncookies
   echo 1 > /proc/sys/net/ipv4/conf/default/rp_filters
   for i in /proc/sys/net/ipv4/conf/*; do
   echo "0" > $i/accept_redirects
   echo "0" > $i/accept_source_route
   echo "1" > $i/log_martians
   echo "1" > $i/rp_filter
   done
   iptables -I INPUT 1 -m state --state INVALID -j LOG --log-level info --log-prefix "PKT INVALIDO - "
   iptables -I INPUT 2 -m state --state INVALID -j DROP
   iptables -A INPUT -m state --state INVALID -j DROP # Elimina os pacotes invalidos
   iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
   iptables -A FORWARD -m state --state RELATED,ESTABLISHED,NEW -j ACCEPT
   iptables -A OUTPUT -m state --state RELATED,ESTABLISHED,NEW -j ACCEPT
   iptables -A INPUT -i lo -j ACCEPT
   iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT
   iptables -A INPUT -p tcp --dport 80 -j ACCEPT
   iptables -t filter -N syn-chain
   iptables -t filter -A syn-chain -p tcp --syn -m limit --limit 2/s -j ACCEPT
   iptables -t filter -A syn-chain -j DROP
   iptables -A INPUT -p tcp --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 5/m -j ACCEPT
   iptables -A FORWARD -m unclean -j DROP

  #Descomente o serviço que deseja que o firewall não bloqueie

  ##Apache - Servidor Web
  #iptables -A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT

  ##Apache TomCat - Servidor Web
  #iptables -A INPUT -p tcp --dport 8080 -j ACCEPT

  ##Bind - Servidor DNS
  #iptables -A INPUT -p udp --dport 53 -j ACCEPT

  ##DanGuardian - Servidor Proxy
  #iptables -A INPUT -p tcp --dport 8080 -j ACCEPT

  ##ProFTP - Servidor FTP
  #iptables -A INPUT -p tcp --dport 21 -j ACCEPT
  #iptables -A INPUT -p tcp -m multiport --dports 49152:49162 -j ACCEPT

  ##Postfix - Servidor de E-mail
  #iptables -A INPUT -i $ilan -p tcp -m multiport --dports 25,110 -j ACCEPT
  #iptables -A INPUT -i $ilan -p tcp -m multiport --dports 465,995 -j ACCEPT
  #iptables -A INPUT -i $ilan -p tcp --sport 25 -j ACCEPT

  ##PostgreSQL - Servidor Postgresql
  #iptables -A INPUT -i $ilan -p tcp --dport 5432 -j ACCEPT

  ##SSH - Servidor SSH
  #iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --update --seconds 300 --hitcount 3 -j DROP
  #iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --set
  #iptables -A INPUT -p tcp --dport 22 -j ACCEPT

  ##VNC - Servidor de Acesso Remoto
  #iptables -A INPUT -p tcp --dport 5900 -j ACCEPT
  #########################
  ##PROTOCOLOS E SERVIÇOS##
  #########################

  ##AIM
  #iptables -A INPUT -i $inet -p tcp --sport 5190 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp --sport 5190 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp --dport 5190 -j ACCEPT

  ##DNS - Serviço de Nomes de Dominios
  #iptables -A INPUT -p tcp -m multiport --sports 53,5353 -j ACCEPT
  #iptables -A INPUT -p udp -m multiport --sports 53,5353 -j ACCEPT
  #iptables -A FORWARD -p tcp -m multiport --sports 53,5353 -j ACCEPT
  #iptables -A FORWARD -p udp -m multiport --sports 53,5353 -j ACCEPT
  #iptables -A FORWARD -p tcp -m multiport --dports 53,5353 -j ACCEPT
  #iptables -A FORWARD -p udp -m multiport --dports 53,5353 -j ACCEPT

  ##FTP - Protocolo de Transferência de Arquivo
  #iptables -A INPUT -i $inet -p tcp --sport 21 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp --sport 21 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp --dport 21 -j ACCEPT

  # HTTP - Protocolo de Transferência de Hypertext
  #iptables -A INPUT -i $inet -p tcp -m multiport --sports 80,8080 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp -m multiport --sports 80,8080 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp -m multiport --dports 80,8080 -j ACCEPT

  ##HTTPS - Protocolo de Transferência de Hypertext Seguro
  #iptables -A INPUT -i $inet -p tcp --sport 443 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp --sport 443 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp --dport 443 -j ACCEPT

  ##IAPP - Protocolo de Ponto de Acesso
  #iptables -A INPUT -i $ilan -p udp --sport 2313 -j ACCEPT

  ##IPP - Protocolo de Impressão na Internet
  #iptables -A INPUT -i $ilan -p tcp --dport 631 -j ACCEPT
  #iptables -A INPUT -i $ilan -p udp -m multiport --dports 138,631 -j ACCEPT

  ##IRC - Internet Relay Chat
  #iptables -A INPUT -i $inet -p tcp --sport 6667 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp --sport 6667 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp --dport 6667 -j ACCEPT

  ##Microsoft-DS - Serviços de Diretório da Microsoft
  #iptables -A INPUT -i $ilan -p tcp --dport 445 -j ACCEPT
  #iptables -A INPUT -i $ilan -p tcp -m multiport --sports 139,445 -j ACCEPT

  ##MSNMS - Serviço de Mensageiro de Rede da Microsoft
  #iptables -A INPUT -i $inet -p tcp -m multiport --sports 1863,1900 -j ACCEPT
  #iptables -A INPUT -i $inet -p udp --sport 1900 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp -m multiport --sports 1863,7001 -j ACCEPT
  #iptables -A FORWARD -i $inet -p udp --sport 7001 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp -m multiport --dports 1863,7001 -j ACCEPT
  #iptables -A FORWARD -o $inet -p udp --dport 7001 -j ACCEPT

  ##NETBIOS-SSN - Serviço de Sessão NetBIOS
  #iptables -A INPUT -i $ilan -p udp -m multiport --dports 137,138 -j ACCEPT
  #iptables -A INPUT -i $ilan -p tcp --dport 139 -j ACCEPT

  ##NO-IP - Provedor de DNS Dinâmico
  #iptables -A INPUT -i $inet -p tcp --sport 8245 -j ACCEPT

  ##NTP - Protocolo para sincronização dos relógios
  #iptables -A INPUT -i $inet -p udp --sport 123 -j ACCEPT
  #iptables -A FORWARD -i $inet -p udp --sport 123 -j ACCEPT
  #iptables -A FORWARD -o $inet -p udp --dport 123 -j ACCEPT

  ##POP3S - Protocolo de Correio Seguro
  #iptables -A INPUT -i $inet -p tcp --sport 995 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp --sport 995 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp --dport 995 -j ACCEPT

  ##SSDP - Protocolo para Descoberta de Serviços Simples
  #iptables -A INPUT -i $ilan -p udp --dport 1900 -j ACCEPT

  ##SSH - Shell Seguro
  #iptables -A INPUT -p tcp --sport 22 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp --sport 22 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp --dport 22 -j ACCEPT

  ##SSMTP - Protocolo Simples para Transferência de Correio Seguro
  #iptables -A INPUT -i $inet -p tcp -m multiport --sports 465,587 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp --sport 465 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp --dport 465 -j ACCEPT

  ##TELNET
  #iptables -A INPUT -p tcp --sport 23 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp --sport 23 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp --dport 23 -j ACCEPT

  ##VNC - Computação em Rede Virtual
  #iptables -A INPUT -p tcp --sport 5900 -j ACCEPT
  #iptables -A FORWARD -i $inet -p tcp --sport 5900 -j ACCEPT
  #iptables -A FORWARD -o $inet -p tcp --dport 5900 -j ACCEPT

    echo ""
    echo -e "${verde}Firewall ativado com sucesso.${NORMAL}"
    sleep 1
}
 function stopFire() {
     clear
     echo -e "${verm} Parando firewall..."
     sleep 2
     iptables -F
     iptables -X
     iptables -t mangle -F
     iptables -P INPUT   ACCEPT
     iptables -P OUTPUT  ACCEPT
     iptables -P FORWARD ACCEPT
     echo "1" > /proc/sys/net/ipv4/ip_forward
     echo "0" > $i/tcp_syncookies
     echo "0" > $i/icmp_echo_ignore_broadcasts
     echo "0" > $i/icmp_ignore_bogus_error_response
     echo 1 > /proc/sys/net/ipv4/conf/all/accept_source_route
     echo 1 > /proc/sys/net/ipv4/conf/all/accept_redirects
     echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
     echo 0 > /proc/sys/net/ipv4/tcp_syncookies
     echo 0 > /proc/sys/net/ipv4/conf/default/rp_filter
     for i in /proc/sys/net/ipv4/conf/*; do
     echo "1" > $i/accept_redirects
     echo "1" > $i/accept_source_route
     echo "0" > $i/log_martians
     echo "0" > $i/rp_filter
     done
 }

function permFire() {
 reset
 echo -e "${verde}Esse firewall será 'ativado' toda vez que o sistema for inicializado${NORMAL}"
 sleep 3
 echo  ""
 echo "
 iptables -F INPUT
 iptables -F OUTPUT
 iptables -F FORWARD
 iptables -F -t filter
 iptables -F POSTROUTING -t nat
 iptables -F PREROUTING -t nat
 iptables -F OUTPUT -t nat
 iptables -F -t nat
 iptables -t nat -F
 iptables -t mangle -F
 iptables -X
 iptables -Z
 iptables -t nat -Z
 iptables -t mangle -Z
 iptables -P INPUT ACCEPT
 iptables -P OUTPUT ACCEPT
 iptables -P FORWARD ACCEPT
 iptables -P INPUT DROP
 iptables -P FORWARD DROP
 iptables -P OUTPUT DROP
 iptables -A INPUT -i lo -d 127.0.0.1 -j ACCEPT
 iptables -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/s -j ACCEPT
 iptables -A INPUT -p icmp --icmp-type echo-request -j DROP
 i=/proc/sys/net/ipv4
 echo "0" > /proc/sys/net/ipv4/ip_forward
 echo "1" > $i/tcp_syncookies
 echo "1" > $i/icmp_echo_ignore_broadcasts
 echo "1" > $i/icmp_ignore_bogus_error_response
 echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route
 echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects
 echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
 echo 1 > /proc/sys/net/ipv4/tcp_syncookies
 echo 1 > /proc/sys/net/ipv4/conf/default/rp_filters
 for i in /proc/sys/net/ipv4/conf/*; do
 echo "0" > $i/accept_redirects
 echo "0" > $i/accept_source_route
 echo "1" > $i/log_martians
 echo "1" > $i/rp_filter
 done
 iptables -I INPUT 1 -m state --state INVALID -j LOG --log-level info --log-prefix "PKT INVALIDO - "
 iptables -I INPUT 2 -m state --state INVALID -j DROP
 iptables -A INPUT -m state --state INVALID -j DROP # Elimina os pacotes invalidos
 iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
 iptables -A FORWARD -m state --state RELATED,ESTABLISHED,NEW -j ACCEPT
 iptables -A OUTPUT -m state --state RELATED,ESTABLISHED,NEW -j ACCEPT
 iptables -A INPUT -i lo -j ACCEPT
 iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT
 iptables -A INPUT -p tcp --dport 80 -j ACCEPT
 iptables -t filter -N syn-chain
 iptables -t filter -A syn-chain -p tcp --syn -m limit --limit 2/s -j ACCEPT
 iptables -t filter -A syn-chain -j DROP
 iptables -A INPUT -p tcp --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 5/m -j ACCEPT
 iptables -A FORWARD -m unclean -j DROP

#Descomente o serviço que deseja que o firewall não bloqueie

##Apache - Servidor Web
#iptables -A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT

##Apache TomCat - Servidor Web
#iptables -A INPUT -p tcp --dport 8080 -j ACCEPT

##Bind - Servidor DNS
#iptables -A INPUT -p udp --dport 53 -j ACCEPT

##DanGuardian - Servidor Proxy
#iptables -A INPUT -p tcp --dport 8080 -j ACCEPT

##ProFTP - Servidor FTP
#iptables -A INPUT -p tcp --dport 21 -j ACCEPT
#iptables -A INPUT -p tcp -m multiport --dports 49152:49162 -j ACCEPT

##Postfix - Servidor de E-mail
#iptables -A INPUT -i $ilan -p tcp -m multiport --dports 25,110 -j ACCEPT
#iptables -A INPUT -i $ilan -p tcp -m multiport --dports 465,995 -j ACCEPT
#iptables -A INPUT -i $ilan -p tcp --sport 25 -j ACCEPT

##PostgreSQL - Servidor Postgresql
#iptables -A INPUT -i $ilan -p tcp --dport 5432 -j ACCEPT

##SSH - Servidor SSH
#iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --update --seconds 300 --hitcount 3 -j DROP
#iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --set
#iptables -A INPUT -p tcp --dport 22 -j ACCEPT

##VNC - Servidor de Acesso Remoto
#iptables -A INPUT -p tcp --dport 5900 -j ACCEPT
#########################
##PROTOCOLOS E SERVIÇOS##
#########################

##AIM
#iptables -A INPUT -i $inet -p tcp --sport 5190 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp --sport 5190 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp --dport 5190 -j ACCEPT

##DNS - Serviço de Nomes de Dominios
#iptables -A INPUT -p tcp -m multiport --sports 53,5353 -j ACCEPT
#iptables -A INPUT -p udp -m multiport --sports 53,5353 -j ACCEPT
#iptables -A FORWARD -p tcp -m multiport --sports 53,5353 -j ACCEPT
#iptables -A FORWARD -p udp -m multiport --sports 53,5353 -j ACCEPT
#iptables -A FORWARD -p tcp -m multiport --dports 53,5353 -j ACCEPT
#iptables -A FORWARD -p udp -m multiport --dports 53,5353 -j ACCEPT

##FTP - Protocolo de Transferência de Arquivo
#iptables -A INPUT -i $inet -p tcp --sport 21 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp --sport 21 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp --dport 21 -j ACCEPT

# HTTP - Protocolo de Transferência de Hypertext
#iptables -A INPUT -i $inet -p tcp -m multiport --sports 80,8080 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp -m multiport --sports 80,8080 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp -m multiport --dports 80,8080 -j ACCEPT

##HTTPS - Protocolo de Transferência de Hypertext Seguro
#iptables -A INPUT -i $inet -p tcp --sport 443 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp --sport 443 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp --dport 443 -j ACCEPT

##IAPP - Protocolo de Ponto de Acesso
#iptables -A INPUT -i $ilan -p udp --sport 2313 -j ACCEPT

##IPP - Protocolo de Impressão na Internet
#iptables -A INPUT -i $ilan -p tcp --dport 631 -j ACCEPT
#iptables -A INPUT -i $ilan -p udp -m multiport --dports 138,631 -j ACCEPT

##IRC - Internet Relay Chat
#iptables -A INPUT -i $inet -p tcp --sport 6667 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp --sport 6667 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp --dport 6667 -j ACCEPT

##Microsoft-DS - Serviços de Diretório da Microsoft
#iptables -A INPUT -i $ilan -p tcp --dport 445 -j ACCEPT
#iptables -A INPUT -i $ilan -p tcp -m multiport --sports 139,445 -j ACCEPT

##MSNMS - Serviço de Mensageiro de Rede da Microsoft
#iptables -A INPUT -i $inet -p tcp -m multiport --sports 1863,1900 -j ACCEPT
#iptables -A INPUT -i $inet -p udp --sport 1900 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp -m multiport --sports 1863,7001 -j ACCEPT
#iptables -A FORWARD -i $inet -p udp --sport 7001 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp -m multiport --dports 1863,7001 -j ACCEPT
#iptables -A FORWARD -o $inet -p udp --dport 7001 -j ACCEPT

##NETBIOS-SSN - Serviço de Sessão NetBIOS
#iptables -A INPUT -i $ilan -p udp -m multiport --dports 137,138 -j ACCEPT
#iptables -A INPUT -i $ilan -p tcp --dport 139 -j ACCEPT

##NO-IP - Provedor de DNS Dinâmico
#iptables -A INPUT -i $inet -p tcp --sport 8245 -j ACCEPT

##NTP - Protocolo para sincronização dos relógios
#iptables -A INPUT -i $inet -p udp --sport 123 -j ACCEPT
#iptables -A FORWARD -i $inet -p udp --sport 123 -j ACCEPT
#iptables -A FORWARD -o $inet -p udp --dport 123 -j ACCEPT

##POP3S - Protocolo de Correio Seguro
#iptables -A INPUT -i $inet -p tcp --sport 995 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp --sport 995 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp --dport 995 -j ACCEPT

##SSDP - Protocolo para Descoberta de Serviços Simples
#iptables -A INPUT -i $ilan -p udp --dport 1900 -j ACCEPT

##SSH - Shell Seguro
#iptables -A INPUT -p tcp --sport 22 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp --sport 22 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp --dport 22 -j ACCEPT

##SSMTP - Protocolo Simples para Transferência de Correio Seguro
#iptables -A INPUT -i $inet -p tcp -m multiport --sports 465,587 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp --sport 465 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp --dport 465 -j ACCEPT

##TELNET
#iptables -A INPUT -p tcp --sport 23 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp --sport 23 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp --dport 23 -j ACCEPT

##VNC - Computação em Rede Virtual
#iptables -A INPUT -p tcp --sport 5900 -j ACCEPT
#iptables -A FORWARD -i $inet -p tcp --sport 5900 -j ACCEPT
#iptables -A FORWARD -o $inet -p tcp --dport 5900 -j ACCEPT
" > firewall.sh
      bash firewall.sh
      mv firewall.sh /etc/init.d
      ln -s /etc/init.d/firewall.sh /etc/rc3.d/S54firewall
  echo -e "${verde}Firewall ativado com sucesso${NORMAL}"
  sleep 1
  }

function permStopFire() {
 reset
 echo -e "${azul}Parando firewall...${NORMAL}"
 sleep 2
 iptables -F
 iptables -X
 iptables -t mangle -F
 iptables -P INPUT   ACCEPT
 iptables -P OUTPUT  ACCEPT
 iptables -P FORWARD ACCEPT
 echo "1" > /proc/sys/net/ipv4/ip_forward
 echo "0" > $i/tcp_syncookies
 echo "0" > $i/icmp_echo_ignore_broadcasts
 echo "0" > $i/icmp_ignore_bogus_error_response
 echo 1 > /proc/sys/net/ipv4/conf/all/accept_source_route
 echo 1 > /proc/sys/net/ipv4/conf/all/accept_redirects
 echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
 echo 0 > /proc/sys/net/ipv4/tcp_syncookies
 echo 0 > /proc/sys/net/ipv4/conf/default/rp_filter
 for i in /proc/sys/net/ipv4/conf/*; do
 echo "1" > $i/accept_redirects
 echo "1" > $i/accept_source_route
 echo "0" > $i/log_martians
 echo "0" > $i/rp_filter
 done
 rm /etc/rc3.d/S54firewall
 rm /etc/init.d/firewall.sh
 echo -e "${verde}Firewall parado com sucesso${NORMAL}"
 sleep 2
}

function newFire() {
    echo -e "${ciano}Desenvolver firewall${NORMAL}"
    echo -e "${branco}Escreva as regras que seu firewall deverá ter${NORMAL}"
    echo -e "${branco}O script o configurará para inicio automático${NORMAL}"
    sleep 7
    echo "#!/bin/bash" > /etc/init.d/userFirewall.sh
    nano /etc/init.d/userFirewall.sh
    echo -e "${azul}Iniciando firewall..${NORMAL}"
    sleep 1
    bash /etc/init.d/userFirewall.sh
    cp -Rf /etc/init.d/userFirewall.sh /etc/rc3.d/
    mv /etc/rc3.d/userFirewall.sh /etc/rc3.d/S20userFirewall
    echo -e "${verde}Concluído!${NORMAL}"
    sleep 1
}

function blockSite() {
  echo -e "${ciano}Digite o endereço do site que deseja bloquear${branco}(ex:https://facebook.com)${NORMAL}"
  read blockResp
  clear
  echo "0.0.0.0 $blockResp" >> /etc/hosts
  echo -e "${verde}Site bloqueado!${branco}(você não terá mais acesso a esse site)${NORMAL}"
  echo -e "${branco}Para desfazer acesse o arquivo /etc/hosts e delete a linha:"
  echo -e "${branco}0.0.0.0 $blockResp ${NORMAL}"
  sleep 5
}

 echo -e "${amarelo}1)${verde} Iniciar firewall${NORMAL}"
 echo -e "${amarelo}2)${verde} Iniciar firewall ${branco}(Permanente)${NORMAL}"
 echo -e "${amarelo}0)${verm} Parar firewall${NORMAL}"
 echo -e "${amarelo}9)${verm} Parar firewall ${branco}(Permanente)${NORMAL}"
 echo -e "${amarelo}5)${ciano} Crie seu firewall${branco}(Avançado)${NORMAL}"
 echo -e "${amarelo}6)${ciano} Bloqueie um site${NORMAL}"
 echo ""
 echo -e "${verde}X)${amarelo}Voltar ao menu princípal${NORMAL}"

 read -n1 respFire


 case $respFire in

  1) startFire;
     reset;
     firew;
     ;;
    2) permFire;
       reset;
       firew;
       ;;

   0) stopFire;
      reset;
      firew;
      ;;

   9) permStopFire;
      reset;
      firew;
      ;;

      5)reset;
        newFire;
        firew;
        ;;

        6)reset;
          blockSite;
          firew;
          ;;

    X | x) fazer;
           ;;

     *) reset;
        firew;

 esac
}


function gerarSenha() {
  letras='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
  num='0123456789'
  especial='!@#$%*()_+'
  lista="$letras$num$especial"
  tamanho=${#lista}
  echo -e "${ciano}Digite o números de caractéres que a senha terá:"
  read contSenha
  if [[ $contSenha = ?(+|-)+([0-9]) ]];then #confere se a variável é numérica ou não
  clear
  echo -ne "${branco}Sua senha é: ${NORMAL}"
    for ((i=0;i<$contSenha;i++))
    do
      ordem=$((RANDOM % $tamanho + 1))''
      senha=$(echo $lista | cut -c "$ordem")
      echo -ne "${verde}$senha${NORMAL}"
    done

else
  clear
  echo -e "${verm}Digite apenas um valor numério sem letras${NORMAL}"
fi
  echo ""
  echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
  read -n1 pass
  case $pass in
    q | Q)reset;
          seguranca;
          ;;

          *)reset;
            gerarSenha;
            ;;
          esac
}

function anonimato() {
  function anonyStart() {
    which tor > /dev/null
    if [ $? == 0 ];then
      echo -e "${ciano}Iniciando serviço...${NORMAL}"
      service tor start > /dev/null
      clear
      echo -e "${verde}Serviço inicializado!${NORMAL}"
      echo -e "${branco}Lembrando que essa opção não é 100% eficaz${NORMAL}"
      echo -e "${branco}Pois o script apenas inicializa o serviço tor, isto é sua conexão irá passar por proxys${NORMAL}"
      sleep 7
    else
      echo -e "${verm}Você precisa ter o TOR instaldo em sua máquina${NORMAL}"
      sleep 1
      clear
      echo -e "${ciano}Deseja instala-lo?[s/n]"
      read -n1 torInstResp
      case $torInstResp in
        s | S)echo -e "${ciano}Instalado o TOR...Aguarde${NORMAL}";
              echo "";
              apt-get install -y --force-yes tor | pv -W > /dev/null;
              echo "";
              echo -e "${verde}TOR instalado!${NORMAL}";
              sleep 1;
              anonyStart;
              ;;

        n | N) seguranca
        ;;

        *) fazer
      esac
    fi
  }

function anonyStop() {
  echo -e "${ciano}Parando serviço de anonimato...${NORMAL}"
  service tor stop > /dev/null
  echo ""
  echo -e "${verde}Serviço parado!${NORMAL}"
  sleep 1
}

echo -e "${amarelo}Selecione uma das opções:${NORMAL}"
echo ""
echo -e "${verde}1) ${azul}Iniciar serviço${NORMAL}"
echo -e "${verde}2) ${azul}Parar serviço${NORMAL}"
echo ""
echo -e "${branco}Voltar [Q]${NORMAL}"
read -n1 anonimatoResp
case $anonimatoResp in

  1)reset;
    anonyStart;
    reset;
    seguranca;
    ;;

    2)reset;
      anonyStop;
      reset;
      seguranca;
      ;;

      q | Q)reset;
            seguranca;
            ;;

            *)fazer;

          esac
}

echo -e "${amarelo}1) ${verde}Firewall${NORMAL}"
echo -e "${amarelo}2) ${verde}Senhas${NORMAL}"
echo -e "${amarelo}3)${verde} Anonimato${NORMAL}"
echo ""
echo -e "${branco}Escolha uma das opção ou [Q] para voltar${NORMAL}"
read -n1 segResp
case $segResp in

  1)reset;
    firew;
    seguranca;
    ;;

    2)reset;
      gerarSenha;
      seguranca;
      ;;

      3)reset;
        anonimato;
        seguranca;
        ;;

      q | Q)fazer;
      ;;

      *)reset;
        seguranca;
        ;;

      esac
}
########## Informações do hardware e etc.... #################
function infos() {
  function rede() {
    iwco=`iwconfig`
    ifco=`ifconfig`
    dns=`cat /etc/resolv.conf`
    rot=`route`
    mywifi=`awk -F= '/^(psk|id)/{print $2}' /etc/NetworkManager/system-connections/"$(iwgetid -r)"`
    conexoes=`netstat -ant | awk '{print $NF,$3,$4,$5}' | grep -v '[a-z]' | sort | uniq -c`
    echo -e "${amarelo}Informações sobre a sua rede${NORMAL}"
    echo ""
    sleep 2
    echo -e "${amarelo}Equivale ao iwconfig:${NORMAL}"
    sleep 1
    echo -e "${azul} $iwco ${NORMAL}"
    echo ""
    echo -e "${amarelo}Equivale ao ifconfig:${NORMAL}"
    echo -e "${azul}$ifco${NORMAL}"
    sleep 1
    echo ""
    echo -e "${amarelo}Informções do DNS:${NORMAL}"
    sleep 1
    echo -e "${azul}$dns${NORMAL}"
    echo ""
    echo -e "${amarelo}ROUTE:${NORMAL}"
    sleep 1
    echo -e "${azul}$rot${NORMAL}"
    echo ""
    echo -e "${amarelo}Rede que está conectado e senha:${NORMAL}"
    sleep 1
    echo -e "${azul}$mywifi${NORMAL}"
    echo ""
    echo -e "${amarelo}Lista de conexões estabelecidas:${NORMAL}"
    sleep 1
    echo -e "${azul}$conexoes${NORMAL}"
    echo ""
    echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
    read -n1 redeResp
    case $redeResp in
      Q | q)reset;
            infos;
            ;;
     *)echo -e "${verm}Opção inválida${NORMAL}";
       sleep 2;
       rede;
      ;;
    esac
  }

  function hard() {
    cpui=`cat /proc/cpuinfo;echo "";lscpu`
    memi=`cat /proc/meminfo`
    disc=`df -H /`
    fre=`free -m`
    srNum=`dmidecode -s system-serial-number`
    distroInfo=`lsb_release -a`
    totpacotes=`dpkg -l | grep -c ^i`
    echo -e "${amarelo}Informações da CPU e memória(HD)"
    echo ""
    echo -e "${amarelo}CPU:${NORMAL}"
    sleep 1
    echo -e "${azul} $cpui ${NORMAL}"
    echo ""
    echo -e "${amarelo}RAM:${NORMAL}"
    sleep 1
    echo -e "${azul} $memi ${NORMAL}"
    echo ""
    echo -e "${azul} $fre ${NORMAL}"
    echo ""
    echo -e "${amarelo}HD:${NORMAL}"
    sleep 1
    echo -e "${azul}$disc${NORMAL}"
    echo ""
    echo -e "${amarelo}Número de série:${NORMAL}"
    sleep 1
    echo -e "${azul}$srNum${NORMAL}"
    echo ""
    echo -e "${amarelo}Informação da distro instalada:${NORMAL}"
    sleep 1
    echo -e "${azul}$distroInfo${NORMAL}"
    echo ""
    echo -e "${amarelo}Total de pacotes instalados${NORMAL}"
    sleep 1
    echo -e "${azul}$totpacotes${NORMAL}"
    echo ""
    echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
    read -n1 hardResp
    case $hardResp in
      Q | q)reset;
            infos;
            ;;
     *)echo -e "${verm}Opção inválida${NORMAL}";
       sleep 2;
       hard;
      ;;
    esac
  }

  function arqui() {
    echo -e "${amarelo}Arquitetura da sua máquina(x86_64 ou i386)${NORMAL}"
    echo ""
    archi=`arch`
    echo -e "${azul}A arquiteura da sua máquina é: ${verm}$archi${NORMAL}"
    echo ""
    echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
    read -n1 arquiResp
    case $arquiResp in
      Q | q)reset;
            infos;
            ;;
     *)reset;
       echo -e "${verm}Opção inválida${NORMAL}";
       sleep 2;
       arqui;
      ;;
    esac
  }
  function ker() {
    unn=`uname -n`
    unr=`uname -r`
    unv=`uname -v`
    echo -e "${amarelo}Informações sobre o kernel${NORMAL}"
    echo ""
    echo -e ${verm} $unn ${azul}$unr ${verde}$unv ${NORMAL}
    echo ""
    echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
    read -n1 kerResp
    case $kerResp in
      Q | q)reset;
            infos;
            ;;
     *)reset;
       echo -e "${verm}Opção inválida${NORMAL}";
       sleep 2;
       ker;
      ;;
    esac
  }

  function ports() {
    function pergNmap() {
      echo -e "${verm}Nmap não instalado${NORMAL}"
      sleep 1
      echo -e "${verde}Deseja instalar o Nmap? [N/S]${NORMAL}"
      read -n1 nmapResp
      case $nmapResp in
        S | s)echo "";
            echo -e "${azul}Instalando Nmap.... Aguarde...${NORMAL}";
            echo "";
            apt-get -y install nmap | pv -W >/dev/null;
            reset;
            infos;
             ;;

        N | n)reset;
              infos;
              ;;
      esac

    }
    echo -e "${amarelo}Informações sobre os serviços e portas rodando${NORMAL}"
    echo ""
    which nmap > /dev/null
    if [ $? == 0 ];then
    nmap -sV localhost
    echo ""
    echo -e "${verde}Voltar [Q]${NORMAL}"
    read -n1 voltResp
    case $voltResp in
      Q | Q)fazer;
    esac
  else
    reset;pergNmap
  fi
  }

  function scan-host() {
    function netcat-inst() {
      echo -e "${verm}Netcat não instalado${NORMAL}"
      sleep 1
      echo -e "${verde}Deseja instalar o Netcat? [N/S]${NORMAL}"
      read -n1 netcatResp
      case $netcatResp in
        S | s)echo "";
            echo -e "${azul}Instalando Netcat.... Aguarde...${NORMAL}";
            echo "";
            apt-get -y install netcat | pv -W > /dev/null;
            reset;
            infos;
             ;;

        N | n)reset;
              infos;
              ;;

      esac
    }
    which netcat > /dev/null
    if [ $? == 0 ];then
      echo -e "${ciano}Digite o IP ou DNS do host remoto: ${NORMAL}"
      read remoteHost
      reset
      echo -e "${ciano}Digite o número da porta à ser verificada:${NORMAL}"
      read remotePort
      reset
      echo -e "${azul}Realizando scaneamento...${NORMAL}"
      netcat -w 1 $remoteHost $remotePort >/dev/null
      if [ $? == 0 ];then
        echo -e "${verde}Porta $remotePort aberta!${NORMAL}"
        sleep 2

      else
        echo -e "${verm}Porta $remotePort fechada!${NORMAL}"
        sleep 2
      fi
    else
      reset
      netcat-inst
    fi
  }

  function verifiVul() {
    function debsecan-inst() {
      echo -e "${verm}Debsecan não instalado${NORMAL}"
      sleep 1
      echo -e "${verde}Deseja instalar o Debsecan? [N/S]${NORMAL}"
      read -n1 secanResp
      case $secanResp in
        S | s)echo "";
            echo -e "${azul}Instalando Debsecan.... Aguarde...${NORMAL}";
            echo "";
            apt-get -y install debsecan | pv -W > /dev/null;
            reset;
            infos;
             ;;

        N | n)reset;
              infos;
              ;;

      esac
    }
    which debsecan > /dev/null
    if [ $? == 0 ];then
      echo -e "${ciano}Verificando todas as vulnerabilidades...${NORMAL}"
      sleep 1
      debsecan --format detail
      echo ""
      echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
      read -n1 debScResp
      case $debScResp in
        Q | q)reset;
              infos;
              ;;
              *)clear;
                echo -e "${verm}Opção inválida!${NORMAL}";
                sleep 1;
                reset;
              esac
    else
      reset
      debsecan-inst
    fi
  }

function geoip() {
  function geoip-inst {
    echo -e "${verm}Lynx não instalado${NORMAL}"
    sleep 1
    echo -e "${verde}Deseja instalar o Lynx? [N/S]${NORMAL}"
    read -n1 lynxResp
    case $lynxResp in
      S | s)echo "";
          echo -e "${azul}Instalando Lynx.... Aguarde...${NORMAL}";
          echo "";
          apt-get -y install lynx | pv -W > /dev/null;
          reset;
          infos;
           ;;

      N | n)reset;
            infos;
            ;;

    esac
  }
  which lynx > /dev/null
  if [ $? == 0 ];then
  echo -e "${ciano}Digite o IP a ser localizado:${NORMAL}"
  read geoResp
  echo -e "${verde}Obtendo localização...${NORMAL}"
  sleep 1
  echo ""
  lynx -dump http://www.ip-adress.com/ip_tracer/$geoResp | awk '/IP country code/,/Local time in/' | tail -12 | sort | uniq -c | sort -n | awk {'print $2,$3,$4,$5,$6,$7,$8,$9'}
  echo ""
  echo -e "${branco}Pressione [ Q ] para voltar${NORMAL}"
  read -n1 geoResp
  case $geResp in
    q | Q)reset;
          infos;
        esac

 else
   reset;
   geoip-inst
 fi
}

function checar() {
  function check-inst {
    echo -e "${verm}Lynis não instalado${NORMAL}"
    sleep 1
    echo -e "${verde}Deseja instalar o Lynx? [N/S]${NORMAL}"
    read -n1 lynisInstall
    case $lynisInstall in
      S | s)echo "";
          echo -e "${azul}Instalando Lynis.... Aguarde...${NORMAL}";
          echo "";
          apt-get -y --force-yes install lynis | pv -W > /dev/null;
          reset;
          infos;
           ;;

      N | n)reset;
            infos;
            ;;

    esac
  }
  which lynis > /dev/null
  if [ $? == 0 ];then
  sleep 1
  echo ""
  lynis --check-all
  echo ""
  echo -e "${branco}Pressione [ Q ] para voltar${NORMAL}"
  read -n1 checkoutResp
  case $checkoutResp in
    q | Q)reset;
          infos;
        esac

 else
   reset;
   check-inst
 fi
}

function tempo() {
  echo -e "${ciano}Previsão do tempo para todo o Brasil${NORMAL}"
  echo ""
  curl wttr.in/brasil
  echo ""
  echo -e "${branco}Pressione [ Q ] para voltar${NORMAL}"
  read -n1 tempResp
  case $tempResp in
    q | Q)reset;
          infos;
        esac
}

  echo -e "${amarelo}Obter informaçõe do seu computador ou notebook:${NORMAL}"
  echo -e "${branco}Seu IP(externo): $myip"
  echo ""
  echo -e "${verm}1) ${verde}Informações de rede${NORMAL}"
  sleep 0.1
  echo -e "${verm}2) ${verde}Informações do sistema${NORMAL}"
  sleep 0.1
  echo -e "${verm}3) ${verde}Informações do kernel${NORMAL}"
  sleep 0.1
  echo -e "${verm}4) ${verde}Arquitetura do processador${NORMAL}"
  sleep 0.1
  echo -e "${verm}5) ${verde}Serviços e portas${branco}(Nmap)${NORMAL}"
  sleep 0.1
  echo -e "${verm}6) ${verde}Verificar serviço de um host remoto${branco}(netcat)${NORMAL}"
  sleep 0.1
  echo -e "${verm}7) ${verde}Verificar vulnerabilidades do sistema${branco}(debsecan)${NORMAL}"
  sleep 0.1
  echo -e "${verm}8) ${verde}Obter geolocalização de um IP${branco}(lynx)${NORMAL}"
  sleep 0.1
  echo -e "${verm}9) ${verde}Verificar distro completamente${branco}(lynis)${NORMAL}"
  sleep 0.1
  echo -e "${verm}10) ${verde}Previsão do tempo${NORMAL}"
  echo ""
  echo -e "${verde}Q) ${verm}Voltar ao menu princípal${NORMAL}"
  read -n2 respInfo
  case $respInfo in
    1) reset;
       rede;
       reset;
       infos;
       ;;

       2)reset;
         hard;
         reset;
         infos;
         ;;

         3)reset;
           ker;
           reset;
           infos;
           ;;

           4)reset;
             arqui;
             reset;
             infos;
             ;;

             5)reset;
               ports;
               reset;
               infos;
               ;;

               6)reset;
                 scan-host;
                 reset;
                 infos;
                 ;;

                 7)reset;
                   verifiVul;
                   reset;
                   infos;
                   ;;

                   8)reset;
                     geoip;
                     reset;
                     infos;
                     ;;

                     9)reset;
                      checar;
                      reset;
                      infos;
                      ;;

                      10)reset;
                         tempo;
                         reset;
                         infos;
                         ;;

             Q | q)fazer;
                   ;;

                   *)reset;
                     infos;
    esac
}

##### Download de arquivos ##############
function down() {
  function baixar() {
    echo -e "${azul}Digite o link do arquivo à ser baixado:${NORMAL}"
    read downResp
    clear
    echo -e "${azul}Selecione o local e o nome para o arquivo, não esqueça de colocar sua extensão${NORMAL}"
    echo -e "${branco}Ex: arquivo${ciano}.deb ${branco}arquivo${ciano}.tar.gz${NORMAL}"
    sleep 2
    echo ""
    direResp=`zenity --file-selection --save`
    clear
    echo -e "${verde}Baixando arquivo${NORMAL}"
    echo -e "${branco}Pressione CTRL + C, para pausar"${NORMAL}
    echo ""
    sleep 2
    echo "$downResp" > /var/log/KS_arqdown.log
    echo "$direResp" > /var/log/KS_dirdown.log
    wget -O $direResp $downResp
    rm /var/log/KS_*.log
    echo ""
    echo -e "${verde}Download concluído${NORMAL}"
    echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
    read -n1 conVOL
    case $conVol in
      Q | q)fazer;
      ;;

      *)fazer;
  esac
  }

function contBaixar() {
  if [ -e /var/log/KS_dirdown.log ];then
  echo -e "${azul}Continuando download anterior...${NORMAL}"
  echo -e "${branco}Pressione CTRL + C, para pausar"${NORMAL}
  echo ""
  sleep 2
  arqDown=`cat /var/log/KS_arqdown.log`
  dirDown=`cat /var/log/KS_dirdown.log`
  wget -c -O $dirDown $arqDown
  if [ $? = 0 ];then
  echo ""
  echo -e "${verde}Download concluído${NORMAL}"
  rm /var/log/KS_*.log
fi
  echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
  read -n1 concluVOL
  case $concluVol in
    Q | q)fazer;
    ;;

    *)fazer;
esac

else
  echo -e "${verm}Não há downloads${NORMAL}"
  sleep 2
  reset
  down
fi
}

function histDown() {
  echo -e "${azul}Excluindo histórico...${NORMAL}"
  rm /var/log/KS_*.log
  echo -e "${verde}Concluído!${NORMAL}"
  sleep 1
  reset
  down
}

ping -c1 google.com > /dev/null
if [ $? = 0 ];then
echo -e "${verde}Baixar arquivos da internet${NORMAL}"
echo ""
echo -e "${verm}1) ${amarelo}Baixar arquivo${NORMAL}"
echo -e "${verm}2) ${amarelo}Continuar download${NORMAL}"
echo -e "${verm}3) ${amarelo}Limpar histórico de download${NORMAL}"
if [ -e /var/log/KS_dirdown.log ] && [ -e /var/log/KS_dirdown.log ];then
  echo -e "${ciano}Você tem [1] download pendente${NORMAL}"
fi
echo ""
echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
echo -e "${azul}Escolha uma das opções:${NORMAL}"
read -n 1 wgetResp
case $wgetResp in
  1)reset;
    baixar;
    reset;
    down;
    ;;

    2)reset;
      contBaixar;
      reset;
      down;
      ;;

      3)reset;
        histDown;
        reset;
        down;
        ;;

      q | Q)fazer;
      ;;

      *)reset;
        down;
esac
else
  echo -e "${verm}Não conectado${NORMAL}"
  echo ""
  echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
  read -n1 notCon
  case $notCon in
    Q | q)fazer;
    ;;

    *)fazer;
esac
  fi
}
########### Instalação de programas ###################
# Variáveis do links

conky64="https://www.dropbox.com/s/of4pehd4ky4v418/conky-manager_2.4-136-ubuntu16.04.1_amd64.deb?dl=0"
conky32="https://www.dropbox.com/s/gl7fboel7p622xz/conky-manager_2.4-136-ubuntu16.04.1_i386.deb?dl=0"
skype32="https://www.dropbox.com/s/1akgb1bivoblz7g/skype-debian_4.3.0.37-1_i386.deb?dl=0"
chrome64="https://www.dropbox.com/s/61tpxbl9eacfll9/google-chrome-stable_current_amd64.deb?dl=0"
atom64="https://www.dropbox.com/s/s2otjos45sigrp5/atom-amd64.deb?dl=0"
teamViewer="https://www.dropbox.com/s/kn598kuw6c8s6xp/teamviewer_11.0.53191_i386.deb?dl=0"
video32="https://www.dropbox.com/s/lo6yaqztq9e6hy8/4kvideodownloader_4.1-1_i386.deb?dl=0"
video64="https://www.dropbox.com/s/3ha6d9tjhus6x9a/4kvideodownloader_4.1-1_amd64.deb?dl=0"
sublime64="https://www.dropbox.com/s/89jqnnessefbjn6/sublime-text_build-3126_amd64.deb?dl=0"
sublime32="https://www.dropbox.com/s/m7dzmfzfut8wb7y/sublime-text_build-3126_i386.deb?dl=0"
pycharmPro="https://www.dropbox.com/s/8qg98lz1ls8ipo4/pycharm-professional-2016.2.3.tar.gz?dl=0"
pycharmCom="https://www.dropbox.com/s/ddhhq3lmqjqo5sv/pycharm-community-2016.2.3.tar.gz?dl=0"
earth64="https://www.dropbox.com/s/lm88k992eto51vw/google-earth-stable_current_amd64.deb?dl=0"
earth32="https://www.dropbox.com/s/d0zubhqb322ys2v/google-earth-stable_current_i386.deb?dl=0"

#Determinar arquitetura da distro
arch=`uname -m`
1
# Funções para instalar os programa

function programas() {

  function conky-manage() {
  if [ $arch == x86_64 ];then
    echo -e "${ciano}Baixando e instalando o Conky-Manager${NORMAL}"
    sleep 1
    wget $conky64 -O Conky-Manager.deb
    clear
    dpkg -i Conky-Manager.deb | pv -W >/dev/null
    apt-get install -f -y --force-yes| pv -W >/dev/null
    rm Conky-Manager.deb
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  else
    echo -e "${ciano}Baixando e instalando o Conky-Manager${NORMAL}"
    sleep 1
    wget $conky32 -O Conky-Manager.deb
    clear
    dpkg -i Conky-Manager.deb | pv -W >/dev/null
    apt-get install -f -y --force-yes| pv -W >/dev/null
    rm Conky-Manager.deb
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  fi
  }


function skyp() {
if [ $arch = x86_64 ];then
  echo -e "${ciano}Instalando Skype. Aguarde...${NORMAL}"
  wget $skype32 -O skype.deb
  clear
  dpkg -i skype.deb | pv -W >/dev/null
  apt-get install -f -y --force-yes| pv -W > /dev/null
  rm skype.deb
  echo -e "${verde}Instalação concluída!${NORMAL}"
  sleep 1
else
  echo -e "${ciano}Baixando e instalando o Skype...${NORMAL}"
  dpkg --add-architecture i386
  wget $skype32 -O skype.deb
  clear
  apt-get update | pv -e > /dev/null
  dpkg -i skype.deb | pv -W >/dev/null
  apt-get install -f -y --force-yes| pv -W > /dev/null
  rm skype.deb
  echo ""
  echo -e "${verde}Instalação concluída!${NORMAL}"
  sleep 1
fi
}

function chrom() {
  echo -e "${ciano}Baixando e instalando o chrome...${NORMAL}"
  wget $chrome64 -O chrome.deb
  clear
  dpkg -i chrome.deb | pv -W > /dev/null
  apt-get install -f -y --force-yes | pv -W > /dev/null
  rm chrome.deb
  echo ""
  echo -e "${verde}Instalação concluída!${NORMAL}"
  sleep 1
}

function atm() {
  echo -e "${ciano}Baixando e instalando o Atom...${NORMAL}"
  sleep 1
  wget $atom64 -O atom.deb
  clear
  dpkg -i atom.deb | pv -W > /dev/null
  apt-get install -f -y --force-yes | pv -W > /dev/null
  rm atom.deb
  echo ""
  echo -e "${verde}Instalação concluída!${NORMAL}"
  sleep 1
}

function team-view(){
  echo -e "${ciano}Baixando e instalando o Team-Viewer...${NORMAL}"
  sleep 1
  if [ $arch = x86_64 ];then
    wget $teamViewer -O TeamViewer.deb
    clear
    dpkg --add-architecture i386
    dpkg -i TeamViewer.deb | pv -W >/dev/null
    apt-get install -f -y --force-yes | pv -W > /dev/null
    rm TeamViewer.deb
    apt-get install -f -y --force-yes | pv -W > /dev/null
    echo ""
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  else
    wget $teamViewer -O TeamViewer.deb
    clear
    dpkg -i TeamViewer.deb | pv -W >/dev/null
    rm TeamViewer.deb
    apt-get install -f -y --force-yes | pv -W > /dev/null
    echo ""
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  fi

}

function videodown() {
if [ $arch == x86_64 ];then
  echo -e "${ciano}Baixando e instalando o 4KVideoDownloader...${NORMAL}"
  sleep 1
  wget $video64 -O 4KVideoDownloader.deb
  clear
  dpkg -i 4KVideoDownloader.deb | pv -W > /dev/null
  apt-get install -f -y --force-yes | pv -W > /dev/null
  rm 4KVideoDownloader.deb
  echo ""
  echo -e "${verde}Instalação concluída!${NORMAL}"
  sleep 1
else
  echo -e "${ciano}Baixando e instalando o 4KVideoDownloader...${NORMAL}"
  sleep 1
  wget $video32 -O 4KVideoDownloader.deb
  clear
  dpkg -i 4KVideoDownloader.deb | pv -W > /dev/null
  apt-get install -f -y --force-yes | pv -W > /dev/null
  rm 4KVideoDownloader.deb
  echo ""
  echo -e "${verde}Instalação concluída!${NORMAL}"
  sleep 1
fi
}

function sublime() {
  echo -e "${ciano}Baixando e instalando o Sublime Text 3...${NORMAL}"
  sleep 1
  if [ $arch = x86_64 ];then
    wget $sublime64 -O sublime-text3.deb
    clear
    dpkg -i sublime-text3.deb
    rm sublime-text3.deb
    apt-get install -f -y --force-yes | pv -W > /dev/null
    echo ""
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  else
    wget $sublime32 -O sublime-text3.deb
    clear
    dpkg -i sublime-text3.deb
    rm sublime-text3.deb
    apt-get install -f -y --force-yes | pv -W > /dev/null
    echo ""
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  fi
}
function pycharm() {
  function pyhcom() {
    echo -e "${ciano}Baixando e instalando o PyCharm-Community...${NORMAL}"
    sleep 1
    wget $pycharmCom -O /opt/PyCharm-Community
    cd /opt;tar -zxvf PyCharm-Community;rm -rf PyCharm-Community
    cd pycharm-community-2016.2.3/bin;cp -Rf pycharm.sh /bin;mv /bin/pycharm.sh /bin/pycharm;chmod +x /bin/pycharm;
    apt-get install -f -y --force-yes | pv -W > /dev/null
    echo ""
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  }

  function pyhpro() {
    echo -e "${ciano}Baixando e instalando o Pycharm-Professional...${NORMAL}"
    sleep 1
    wget $pycharmPro -O /opt/PyCharm-Professional
    cd /opt;tar -zxvf PyCharm-Professional;rm -rf PyCharm-Professional
    cd pycharm-2016.2.3/bin;cp -Rf pycharm.sh /bin;mv /bin/pycharm.sh /bin/pycharm;chmod +x /bin/pycharm;
    apt-get install -f -y --force-yes | pv -W > /dev/null
    echo ""
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  }


echo -e "${ciano}1) ${verm}Pycharm-Professional${branco}(completo)${NORMAL}"
echo -e "${ciano}2) ${verm}Pycharm-community${NORMAL}"
echo ""
echo -e "${verde}Escolha uma das opções:${NORMAL}"
read -n1 pyrResp
case $pyrResp in
  1)reset;
    pyhcom;
    ;;

    2)reset;
      pyhpro;
      ;;

      *)reset;
        programas;
  esac
}

function earth() {
  echo -e "${ciano}Baixando e instalando o Google Earth...${NORMAL}"
  sleep 1
  if [ $arch = x86_64 ];then
    wget $earth64 -O google-earth.deb
    clear
    dpkg -i google-earth.deb
    rm google-earth.deb
    apt-get install -f -y --force-yes | pv -W > /dev/null
    echo ""
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  else
    wget $earth32 -O google-earth.deb
    clear
    dpkg -i google-earth.deb
    rm google-earth.deb
    apt-get install -f -y --force-yes | pv -W > /dev/null
    echo ""
    echo -e "${verde}Instalação concluída!${NORMAL}"
    sleep 1
  fi
}
ping -c1 google.com > /dev/null
if [ $? = 0 ];then
echo -e "${verm}*************************************${NORMAL}"
sleep 0.1
echo -e "${verde}            PROGRAMAS               ${NORMAL}"
sleep 0.1
echo -e "${verm}*************************************${NORMAL}"
sleep 0.1
echo ""
echo -e "${amarelo} 1)${azul} Skype${branco}(amd64+i386)${NORMAL}"
sleep 0.1
echo -e "${amarelo} 2)${azul} Conky-Manager${branco}(amd64+i386)${NORMAL}"
sleep 0.1
echo -e "${amarelo} 3)${azul} Chrome${branco}(amd64)${NORMAL}"
sleep 0.1
echo -e "${amarelo} 4)${azul} Atom${branco}(amd64)${NORMAL}"
sleep 0.1
echo -e "${amarelo} 5)${azul} Team-Viewer${branco}(amd64+i386)${NORMAL}"
sleep 0.1
echo -e "${amarelo} 6)${azul} 4KVideoDownloader${branco}(amd64+i386)${NORMAL}"
sleep 0.1
echo -e "${amarelo} 7)${azul} Sublime-Text3${branco}(amd64+i386)${NORMAL}"
sleep 0.1
echo -e "${amarelo} 8)${azul} PyCharm${branco}(amd64)${NORMAL}"
sleep 0.1
echo -e "${amarelo} 9)${azul} GoogleEarth${branco}(i386+amd64)${NORMAL}"
echo ""
echo "pressione [ Q ] para voltar ao menu principal"
echo -e "${verm}Escolha qual pacote deseja instalar:${NORMAL}"
read -n1 proResp
 while [ proResp != '' ]; do
 case $proResp in

   1)reset;
     skyp;
     reset;
     programas;
     ;;

     2)reset;
      conky-manage;
      reset;
      programas;
      ;;

      3)reset;
       chrom;
       reset;
       programas;
       ;;

       4)reset;
         atm;
         reset;
         programas;
         ;;

         5)reset;
           team-view;
           reset;
           programas;
           ;;

           6)reset;
             videodown;
             reset;
             programas;
             ;;

             7)reset;
               sublime;
               reset;
               programas;
               ;;

               8)reset;
                 pycharm;
                 reset;
                 programas;
                 ;;

                 9)reset;
                   earth;
                   reset;
                   programas;
                   ;;

         Q | q)fazer;
         ;;

  *) reset;
     programas;

esac
done
else
  echo -e "${verm}Não conectado${NORMAL}"
  echo ""
  echo -e "${branco}Pressione [Q] para voltar${NORMAL}"
  read -n1 notCon
  case $notCon in
    Q | q)fazer;
    ;;

    *)fazer;
esac
  fi
}


# Função que serve para atuzalizar o script Knife System para versão mais recente
function atualizarKs() {
  echo -e "${ciano}Atualizando script aguarde...${NORMAL}"
  echo ""
  wget https://anony000.github.io/assets/knifesystem.deb
  dpkg -i knifesystem.deb | pv -W > /var/log/attKS.log
  if [ $? == 0 ];then
    clear
    echo -e "${verde}Atualização concluída!${NORMAL}"
    sleep 1
    rm knifesystem.deb
  else
    echo -e "${verm}Erro na atualização, para mais informações confira em /var/log/attKS.log"
    sleep 1
    knifesystem.deb
    fazer
  fi
}


######################################
#      Setar os comandos do menu     #
#####################################
function fazer() {
  reset
  menu
while [ inst != '' ]
    do

    case $inst in
      A | a)reset;
            instal;
            menu;
            ;;
            B | b)reset;
                  remov;
                  menu;
                  ;;

                  C | c)reset;
                        achar;
                        menu;
                        ;;

                        D | d)reset;
                              repair;
                              menu;
                              ;;

                              E | e)reset;
                                    github;
                                    menu;
                                    ;;

                                    F | f)reset;
                                          programas;
                                          menu;
                                          ;;

                                          G | g)reset;
                                                arquivos;
                                                menu;
                                                ;;

                                                H | h)reset;
                                                      aparencia;
                                                      menu;
                                                      ;;

                                                      I | i)reset;
                                                            seguranca;
                                                             menu;
                                                            ;;

                                                            J | j)reset;
                                                                  infos;
                                                                  menu;
                                                                  ;;

                                                                  K | k)reset;
                                                                        down;
                                                                        menu;
                                                                        ;;



          1) reset;
             atualizarKs;
             exit;
             ;;

          0)reset;
           echo -e "${ciano}Até mais${NORMAL}"
           exit;
           ;;

     *) reset;
        menu;
        ;;
    esac
done
}

if [ `whoami` == "root" ]; then
	fazer;
else
    echo ""
	echo -e $verm "Você precisa ser root digite sua senha e tente novamente${NORMAL}"
    sudo su
fi
